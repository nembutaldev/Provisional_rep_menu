{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/popdavise-v2/src/views/signup/verify-form.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { PostMethod } from '../../utils/peticiones';\nimport { InfoAlert, ErrorAlert } from '../../utils/alertas';\nimport { Redirect } from 'react-router-dom';\nimport { Form, FieldInput, VerifyContainer } from '../../components/inputs/item-forms';\nimport { WidthCaja, CenterElement, Split } from '../../components/containers/containers';\nimport { ButtonSubmit } from '../../components/buttons/button-submit';\nimport SpinerForm from '../../components/spiners/spiner-form';\nimport ReactCodeInput from 'react-code-input';\n\nconst VerifyForm = props => {\n  const [token, setToken] = React.useState('');\n  const [cargando, setCargando] = React.useState(false);\n\n  const handleSubmit = async e => {\n    setCargando(true);\n    e.preventDefault();\n    const pass = props.registro.pass;\n    const email = props.registro.data.user.email;\n    const code = token;\n    const verify = {\n      password: pass,\n      email: email,\n      token: code\n    };\n    console.log(verify);\n    const result = await PostMethod(verify, 'api/verify_acount');\n\n    if (result.ok) {\n      console.log(result.response.data);\n      localStorage.setItem('user', JSON.stringify(result.response.data));\n      props.loginUser(result.response.data);\n      props.history.push('/dashboard');\n      props.cleanRegister();\n      setCargando(false);\n    } else {\n      ErrorAlert('Algo salio mal');\n      setCargando(false);\n    }\n  };\n\n  const handleChange = value => {\n    setToken(value);\n  };\n\n  if (props.registro === null) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CenterElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WidthCaja, {\n    maxWidth: \"500px\",\n    flow: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    border: true,\n    maxWidth: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      fontSize: '1.5rem',\n      fontFamily: 'Bold',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Verifica tu cuenta\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'var(--colordos)',\n      fontFamily: 'Light',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Ingresa el c\\xF3digo de 4 d\\xEDgitos\")), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VerifyContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReactCodeInput, {\n    type: \"number\",\n    fields: 4,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, cargando ? /*#__PURE__*/React.createElement(SpinerForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(ButtonSubmit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 45\n    }\n  }, \"Verificar n\\xFAmero\")))));\n}; //REDUX------->\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    registro: state.register\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    cleanRegister: () => {\n      dispatch({\n        type: 'CLEAN_REGISTER'\n      });\n    },\n    loginUser: data => {\n      dispatch({\n        type: 'LOGIN',\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyForm);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/popdavise-v2/src/views/signup/verify-form.jsx"],"names":["React","connect","PostMethod","InfoAlert","ErrorAlert","Redirect","Form","FieldInput","VerifyContainer","WidthCaja","CenterElement","Split","ButtonSubmit","SpinerForm","ReactCodeInput","VerifyForm","props","token","setToken","useState","cargando","setCargando","handleSubmit","e","preventDefault","pass","registro","email","data","user","code","verify","password","console","log","result","ok","response","localStorage","setItem","JSON","stringify","loginUser","history","push","cleanRegister","handleChange","value","fontSize","fontFamily","margin","color","mapStateToProps","state","ownProps","register","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport { PostMethod } from '../../utils/peticiones';\nimport { InfoAlert, ErrorAlert } from '../../utils/alertas';\nimport {Redirect} from 'react-router-dom'\nimport { Form, FieldInput, VerifyContainer } from '../../components/inputs/item-forms';\nimport { WidthCaja, CenterElement, Split } from '../../components/containers/containers';\nimport { ButtonSubmit } from '../../components/buttons/button-submit';\nimport SpinerForm from '../../components/spiners/spiner-form';\nimport ReactCodeInput from 'react-code-input'\n\n\n\nconst VerifyForm = (props) => {\n     \n\n    const [token, setToken] = React.useState('')\n    \n    const [cargando, setCargando] = React.useState(false)\n    \n\n    const handleSubmit = async (e) =>{\n        setCargando(true)\n        e.preventDefault();\n        \n        const pass = props.registro.pass\n        const email = props.registro.data.user.email\n        const code = token\n        \n        const verify = {\n            password: pass,\n            email: email,\n            token:code\n        }\n        console.log(verify)\n\n        const result = await PostMethod(verify,'api/verify_acount')\n        if(result.ok){\n            console.log(result.response.data)\n            localStorage.setItem('user', JSON.stringify(result.response.data))\n            props.loginUser(result.response.data);\n            props.history.push('/dashboard')\n            props.cleanRegister()\n            setCargando(false)\n        }else{\n            ErrorAlert('Algo salio mal')\n            setCargando(false)\n        }\n        \n\n    }\n\n    const handleChange = (value) =>{\n        setToken(value)\n    }\n\n    \n\n     \n\n    if(props.registro === null){\n       return <Redirect to=\"/signup\"/>\n    }\n\n    return (\n        <CenterElement>\n        <WidthCaja maxWidth=\"500px\" flow=\"column\">\n       \n\n\n        <Form onSubmit={handleSubmit} border maxWidth=\"400px\">\n\n\n            <FieldInput>\n                <h1\n                    style={{fontSize:'1.5rem', fontFamily:'Bold', margin:'auto'}}\n                    >Verifica tu cuenta</h1>\n                <p\n                    style={{color:'var(--colordos)', fontFamily:'Light', margin:'auto'}}\n                    >Ingresa el código de 4 dígitos\n                </p>\n            </FieldInput>\n\n            <FieldInput>\n\n                <VerifyContainer>\n\n                {/* TODO: IMPLEMENTAR CODIGO DE VERIFICACION */}\n\n                    <ReactCodeInput type='number' fields={4} onChange={handleChange} />\n\n                {/* TODO: IMPLEMENTAR CODIGO DE VERIFICACION */}\n\n                </VerifyContainer>\n                \n            </FieldInput>\n\n            <FieldInput>\n                {cargando ? <SpinerForm/> : <ButtonSubmit>Verificar número</ButtonSubmit> }\n            </FieldInput>\n\n\n        </Form>\n        \n        </WidthCaja>\n        \n        </CenterElement>\n    );\n};\n\n\n//REDUX------->\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        registro: state.register\n    }\n}\nconst mapDispatchToProps = (dispatch, ) => {\n    return {\n        cleanRegister: () => {\n            dispatch({type:'CLEAN_REGISTER'})\n        },\n        loginUser:(data) =>{\n            dispatch({type:'LOGIN', data:data})\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyForm)\n"]},"metadata":{},"sourceType":"module"}