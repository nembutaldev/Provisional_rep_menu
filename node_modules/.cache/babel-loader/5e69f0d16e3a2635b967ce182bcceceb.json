{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/first-branchoffice/firts_sesion.jsx\";\nimport React from 'react';\nimport FirstBranchOffice from '../../../views/auth/multiform/first-branchoffice';\nimport { connect } from 'react-redux';\nimport { GetMethod } from '../../../utils/peticiones';\nimport { Redirect } from 'react-router-dom';\nimport CargandoTxt from '../../../components/spiners/cargando-txt';\n\nconst FirstSesion = props => {\n  const idUser = props.sesion.user.id_user;\n  const token = props.sesion.token;\n  const [list, setList] = React.useState([]);\n  const [load, setLoad] = React.useState(true);\n  React.useEffect(() => {\n    const getRestaurants = async () => {\n      const result = await GetMethod(`api/users/restaurants/${idUser}`, {\n        Authorization: 'Bearer ' + token\n      });\n      console.log(result);\n\n      if (result.ok) {\n        setList(result.response.data.data.restaurants);\n        setLoad(false);\n      } else {\n        setLoad(false);\n      }\n    };\n\n    getRestaurants();\n  }, [idUser, token]);\n\n  if (load) {\n    return /*#__PURE__*/React.createElement(CargandoTxt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    });\n  } else {\n    if (list.length !== 0) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(FirstBranchOffice, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }));\n  }\n}; //REDUX----------->\n\n\nconst mapStateToProps = state => {\n  return {\n    sesion: state.login\n  };\n};\n\nexport default connect(mapStateToProps)(FirstSesion);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/first-branchoffice/firts_sesion.jsx"],"names":["React","FirstBranchOffice","connect","GetMethod","Redirect","CargandoTxt","FirstSesion","props","idUser","sesion","user","id_user","token","list","setList","useState","load","setLoad","useEffect","getRestaurants","result","Authorization","console","log","ok","response","data","restaurants","length","mapStateToProps","state","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAI3B,QAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAjC;AACA,QAAMC,KAAK,GAAGL,KAAK,CAACE,MAAN,CAAaG,KAA3B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACe,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACe,QAAN,CAAe,IAAf,CAAxB;AACAf,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAI;AAChB,UAAMC,cAAc,GAAG,YAAW;AAC9B,YAAMC,MAAM,GAAG,MAAMjB,SAAS,CAAE,yBAAwBK,MAAO,EAAjC,EAAoC;AAACa,QAAAA,aAAa,EAAC,YAAYT;AAA3B,OAApC,CAA9B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACC,UAAGA,MAAM,CAACI,EAAV,EAAa;AACTV,QAAAA,OAAO,CAACM,MAAM,CAACK,QAAP,CAAgBC,IAAhB,CAAqBA,IAArB,CAA0BC,WAA3B,CAAP;AACAV,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH,OAHD,MAGK;AACDA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACL,KATD;;AAUAE,IAAAA,cAAc;AACjB,GAZD,EAYE,CAACX,MAAD,EAASI,KAAT,CAZF;;AAiBA,MAAGI,IAAH,EAAQ;AAEJ,wBAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAGH,GALD,MAKK;AAED,QAAGH,IAAI,CAACe,MAAL,KAAgB,CAAnB,EAAqB;AACjB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,wBAEI,oBAAC,iBAAD,oBAAuBrB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ;AAMH;AAEJ,CA5CD,C,CAmDA;;;AAGA,MAAMsB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHrB,IAAAA,MAAM,EAAEqB,KAAK,CAACC;AADX,GAAP;AAGH,CAJD;;AAKA,eAAe7B,OAAO,CAAC2B,eAAD,CAAP,CAAyBvB,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport FirstBranchOffice from '../../../views/auth/multiform/first-branchoffice';\nimport {connect} from 'react-redux';\nimport { GetMethod } from '../../../utils/peticiones';\nimport {Redirect} from 'react-router-dom'\nimport CargandoTxt from '../../../components/spiners/cargando-txt';\n\n\n\nconst FirstSesion = (props) => {\n\n    \n\n    const idUser = props.sesion.user.id_user\n    const token = props.sesion.token\n    const [list, setList] = React.useState([])\n    const [load, setLoad] = React.useState(true);\n    React.useEffect(()=>{\n        const getRestaurants = async () =>{\n            const result = await GetMethod(`api/users/restaurants/${idUser}`, {Authorization:'Bearer ' + token});\n            console.log(result)\n             if(result.ok){\n                 setList(result.response.data.data.restaurants)\n                 setLoad(false)\n             }else{\n                 setLoad(false)\n             }\n        }\n        getRestaurants();\n    },[idUser, token])\n\n     \n\n\n    if(load){\n\n        return <CargandoTxt/>\n\n\n    }else{\n        \n        if(list.length !== 0){\n            return <Redirect to=\"/dashboard\"/>\n        }\n\n        return (\n        \n            <FirstBranchOffice {...props}/>\n            \n        );\n\n    }\n\n};\n\n\n\n\n\n\n//REDUX----------->\n\n\nconst mapStateToProps = (state) => {\n    return {\n        sesion: state.login\n    }\n}\nexport default connect(mapStateToProps)(FirstSesion)"]},"metadata":{},"sourceType":"module"}