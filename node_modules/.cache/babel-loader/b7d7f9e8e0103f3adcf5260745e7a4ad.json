{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/views/auth/multiform/forms/step-four.jsx\";\n//import SpinerForm from '../../../../components/spiners/spiner-form';\nimport React from 'react';\nimport { Form, FieldInput } from '../../../../components/inputs/item-forms';\nimport BartopForm from '../../../../components/bartop/bartop-form';\nimport InputFile from '../../../../components/inputs/input_file/input_file';\nimport { ButtonSubmit } from '../../../../components/buttons/button-submit';\nimport { ButtonText } from '../../../../components/buttons/button-text';\nimport { PostMethod } from '../../../../utils/peticiones';\nimport { connect } from 'react-redux';\nimport SpinerUpload from '../../../../components/spiners/spiner-upload';\nimport { InfoAlert } from '../../../../utils/alertas';\n\nconst StepFour = props => {\n  console.log('%c->BATMAN', 'color:yellow', props);\n  const token = props.sesion.token;\n  const {\n    setSucursal,\n    sucursal\n  } = props;\n  const {\n    imageUrl\n  } = props.sucursal;\n  const [load, setLoad] = React.useState(false);\n\n  const handleDrop = e => {\n    e.preventDefault();\n    setLoad(true);\n    const file = e.dataTransfer.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = async function () {\n      const image = file;\n      const uuId = sucursal.uuid;\n      const type = 'sucursal';\n      const formData = new FormData();\n      formData.append('uuid', uuId);\n      formData.append('type', type);\n      formData.append('image', image);\n      const result = await PostMethod(formData, 'api/users/uploads', {\n        Authorization: 'Bearer ' + token\n      });\n\n      if (result.ok) {\n        setSucursal({ ...sucursal,\n          image: file,\n          imageUrl: result.response.path\n        });\n        setLoad(false);\n      }\n    };\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n\n  const handleFile = e => {\n    //console.log('ordenado')\n    if (e.target.files && e.target.files[0]) {\n      setLoad(true);\n      const file = e.target.files[0];\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = async function () {\n        //setSucursal({...sucursal, image: file, imageUrl:reader.result})\n        const image = file;\n        const uuId = sucursal.uuid;\n        const type = 'sucursal';\n        const formData = new FormData();\n        formData.append('uuid', uuId);\n        formData.append('type', type);\n        formData.append('image', image); //console.log(reader.result)\n\n        const result = await PostMethod(formData, 'api/users/uploads', {\n          Authorization: 'Bearer ' + token\n        });\n\n        if (result.ok) {\n          setSucursal({ ...sucursal,\n            image: file,\n            imageUrl: result.response.path\n          });\n          setLoad(false);\n        }\n\n        console.log('AQUI DEBE ESTAR', result);\n      };\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (imageUrl === '') {\n      InfoAlert('Asegurate de subir una imagen');\n      return;\n    }\n\n    props.nextStep();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    border: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BartopForm, {\n    title: \"Agrega el logotipo del restaurante\",\n    subtitle: \"Formatos aceptados: jpg y png; peso m\\xE1ximo, 5mb\",\n    icon: \"fas fa-store\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputFile, {\n    ide: \"img\",\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    onChange: handleFile,\n    imgPrevio: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, load ? /*#__PURE__*/React.createElement(SpinerUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 30\n    }\n  }) : null, \" \"), /*#__PURE__*/React.createElement(ButtonSubmit, {\n    margin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Siguiente\"), /*#__PURE__*/React.createElement(ButtonText, {\n    onClick: props.prevStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 50\n    }\n  }, \"Anterior\"))));\n}; // ----------> REDUX\n\n\nconst mapStateToProps = state => {\n  return {\n    sesion: state.login\n  };\n};\n\nexport default connect(mapStateToProps)(StepFour); //<a href=\"http://192.168.0.7:8000/api/pdftest\" target=\"_blank\">DESCARGAR</a>\n//<button onClick={props.nextStep}>Next</button>\n//<button onClick={props.prevStep}>Prev</button>","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/views/auth/multiform/forms/step-four.jsx"],"names":["React","Form","FieldInput","BartopForm","InputFile","ButtonSubmit","ButtonText","PostMethod","connect","SpinerUpload","InfoAlert","StepFour","props","console","log","token","sesion","setSucursal","sucursal","imageUrl","load","setLoad","useState","handleDrop","e","preventDefault","file","dataTransfer","files","reader","FileReader","readAsDataURL","onload","image","uuId","uuid","type","formData","FormData","append","result","Authorization","ok","response","path","handleDragOver","handleFile","target","handleSubmit","nextStep","prevStep","mapStateToProps","state","login"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,0CAAjC;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,OAAOC,SAAP,MAAsB,qDAAtB;AACA,SAASC,YAAT,QAA6B,8CAA7B;AACA,SAASC,UAAT,QAA2B,4CAA3B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAKA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,cAA1B,EAAyCF,KAAzC;AACA,QAAMG,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAaD,KAA3B;AACA,QAAM;AAACE,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA0BN,KAAhC;AACA,QAAM;AAACO,IAAAA;AAAD,MAAaP,KAAK,CAACM,QAAzB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBrB,KAAK,CAACsB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAM;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAMK,IAAI,GAAGF,CAAC,CAACG,YAAF,CAAeC,KAAf,CAAqB,CAArB,CAAb;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBL,IAArB;;AACAG,IAAAA,MAAM,CAACG,MAAP,GAAgB,kBAAgB;AAC5B,YAAMC,KAAK,GAAGP,IAAd;AACA,YAAMQ,IAAI,GAAGhB,QAAQ,CAACiB,IAAtB;AACA,YAAMC,IAAI,GAAG,UAAb;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;AACAG,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACAC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBN,KAAzB;AACA,YAAMO,MAAM,GAAG,MAAMjC,UAAU,CAAC8B,QAAD,EAAW,mBAAX,EAAgC;AAACI,QAAAA,aAAa,EAAE,YAAY1B;AAA5B,OAAhC,CAA/B;;AACA,UAAGyB,MAAM,CAACE,EAAV,EAAa;AACTzB,QAAAA,WAAW,CAAC,EACR,GAAGC,QADK;AAERe,UAAAA,KAAK,EAACP,IAFE;AAGRP,UAAAA,QAAQ,EAACqB,MAAM,CAACG,QAAP,CAAgBC;AAHjB,SAAD,CAAX;AAKAvB,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,KAjBD;AAmBP,GAzBD;;AA2BA,QAAMwB,cAAc,GAAIrB,CAAD,IAAM;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAKA,QAAMqB,UAAU,GAAItB,CAAD,IAAM;AACrB;AACA,QAAGA,CAAC,CAACuB,MAAF,CAASnB,KAAT,IAAkBJ,CAAC,CAACuB,MAAF,CAASnB,KAAT,CAAe,CAAf,CAArB,EAAuC;AACnCP,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,YAAMK,IAAI,GAAGF,CAAC,CAACuB,MAAF,CAASnB,KAAT,CAAe,CAAf,CAAb;AACA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBL,IAArB;;AACAG,MAAAA,MAAM,CAACG,MAAP,GAAgB,kBAAkB;AAC9B;AACA,cAAMC,KAAK,GAAGP,IAAd;AACA,cAAMQ,IAAI,GAAGhB,QAAQ,CAACiB,IAAtB;AACA,cAAMC,IAAI,GAAG,UAAb;AACA,cAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;AACAG,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACAC,QAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBN,KAAzB,EAR8B,CAU9B;;AACA,cAAMO,MAAM,GAAG,MAAMjC,UAAU,CAAC8B,QAAD,EAAW,mBAAX,EAAgC;AAACI,UAAAA,aAAa,EAAE,YAAY1B;AAA5B,SAAhC,CAA/B;;AACA,YAAGyB,MAAM,CAACE,EAAV,EAAa;AAETzB,UAAAA,WAAW,CAAC,EACR,GAAGC,QADK;AAERe,YAAAA,KAAK,EAACP,IAFE;AAGRP,YAAAA,QAAQ,EAACqB,MAAM,CAACG,QAAP,CAAgBC;AAHjB,WAAD,CAAX;AAKAvB,UAAAA,OAAO,CAAC,KAAD,CAAP;AACH;;AACDR,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B0B,MAA/B;AACH,OAtBD;AAwBH;AAIJ,GAnCD;;AAsCA,QAAMQ,YAAY,GAAIxB,CAAD,IAAM;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGN,QAAQ,KAAK,EAAhB,EAAmB;AACfT,MAAAA,SAAS,CAAC,+BAAD,CAAT;AACA;AACH;;AACDE,IAAAA,KAAK,CAACqC,QAAN;AACH,GAPD;;AAWA,sBACI,uDACA,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,QAAQ,EAAED,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAoB,IAAA,KAAK,EAAC,oCAA1B;AACoB,IAAA,QAAQ,EAAC,oDAD7B;AAEoB,IAAA,IAAI,EAAC,cAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAQA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAY,IAAA,GAAG,EAAC,KAAhB;AACY,IAAA,MAAM,EAAEzB,UADpB;AAEY,IAAA,UAAU,EAAEsB,cAFxB;AAGY,IAAA,QAAQ,EAAEC,UAHtB;AAIY,IAAA,SAAS,EAAE3B,QAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARA,eAiBA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,IAAI,gBAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqB,IAAvC,MAjBA,eAkBI,oBAAC,YAAD;AAAc,IAAA,MAAM,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBJ,eAmBI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAER,KAAK,CAACsC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArC,CAnBJ,CADA,CADJ;AA0BH,CAlHD,C,CAwHA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHpC,IAAAA,MAAM,EAAEoC,KAAK,CAACC;AADX,GAAP;AAGH,CAJD;;AAMA,eAAe7C,OAAO,CAAC2C,eAAD,CAAP,CAAyBxC,QAAzB,CAAf,C,CAGA;AACA;AACA","sourcesContent":["//import SpinerForm from '../../../../components/spiners/spiner-form';\nimport React from 'react';\nimport { Form, FieldInput } from '../../../../components/inputs/item-forms';\nimport BartopForm from '../../../../components/bartop/bartop-form';\nimport InputFile from '../../../../components/inputs/input_file/input_file';\nimport { ButtonSubmit } from '../../../../components/buttons/button-submit';\nimport { ButtonText } from '../../../../components/buttons/button-text';\nimport { PostMethod } from '../../../../utils/peticiones';\nimport {connect} from 'react-redux'\nimport SpinerUpload from '../../../../components/spiners/spiner-upload';\nimport { InfoAlert } from '../../../../utils/alertas';\n\n\n\n\nconst StepFour = (props) => {\n    console.log('%c->BATMAN', 'color:yellow',props)\n    const token = props.sesion.token\n    const {setSucursal, sucursal} = props\n    const {imageUrl} = props.sucursal\n    const [load, setLoad] = React.useState(false)\n\n    const handleDrop = (e) =>{\n            e.preventDefault();\n            setLoad(true)\n            const file = e.dataTransfer.files[0]\n            let reader = new FileReader();\n            reader.readAsDataURL(file)\n            reader.onload = async function(){\n                const image = file\n                const uuId = sucursal.uuid\n                const type = 'sucursal'\n                const formData = new FormData();\n                formData.append('uuid', uuId)\n                formData.append('type', type)\n                formData.append('image', image)\n                const result = await PostMethod(formData, 'api/users/uploads', {Authorization: 'Bearer ' + token})\n                if(result.ok){\n                    setSucursal({\n                        ...sucursal,\n                        image:file,\n                        imageUrl:result.response.path\n                    })\n                    setLoad(false)\n                }\n            }\n\n    }\n\n    const handleDragOver = (e) =>{\n        e.preventDefault();\n    }\n\n\n    const handleFile = (e) =>{\n        //console.log('ordenado')\n        if(e.target.files && e.target.files[0]){\n            setLoad(true)\n            const file = e.target.files[0]\n            let reader = new FileReader();\n            reader.readAsDataURL(file)\n            reader.onload = async function  (){\n                //setSucursal({...sucursal, image: file, imageUrl:reader.result})\n                const image = file\n                const uuId = sucursal.uuid\n                const type = 'sucursal'\n                const formData = new FormData();\n                formData.append('uuid', uuId)\n                formData.append('type', type)\n                formData.append('image', image)\n\n                //console.log(reader.result)\n                const result = await PostMethod(formData, 'api/users/uploads', {Authorization: 'Bearer ' + token})\n                if(result.ok){\n                    \n                    setSucursal({\n                        ...sucursal,\n                        image:file,\n                        imageUrl:result.response.path\n                    })\n                    setLoad(false)\n                }\n                console.log('AQUI DEBE ESTAR', result)\n            }\n            \n        }\n        \n        \n        \n    }\n    \n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if(imageUrl === ''){\n            InfoAlert('Asegurate de subir una imagen')\n            return;\n        }\n        props.nextStep()\n    }\n\n\n\n    return (\n        <>\n        <Form border onSubmit={handleSubmit}>\n        <BartopForm         title=\"Agrega el logotipo del restaurante\"\n                            subtitle=\"Formatos aceptados: jpg y png; peso máximo, 5mb\"\n                            icon=\"fas fa-store\"\n                            \n                            />\n\n        {/* ------------->INPUT PREVIEW */}\n        <FieldInput>\n            <InputFile  ide=\"img\"\n                        onDrop={handleDrop}\n                        onDragOver={handleDragOver}\n                        onChange={handleFile}\n                        imgPrevio={imageUrl}\n                        />\n        </FieldInput>\n        {/* ------------->INPUT PREVIEW */}\n        <FieldInput>{ load ? <SpinerUpload/> : null } </FieldInput>\n            <ButtonSubmit margin>Siguiente</ButtonSubmit>\n            <ButtonText onClick={props.prevStep}><span>Anterior</span></ButtonText>\n\n        </Form>\n        </>\n    );\n};\n\n\n\n\n\n// ----------> REDUX\nconst mapStateToProps = (state) => {\n    return {\n        sesion: state.login\n    }\n}\n\nexport default connect(mapStateToProps)(StepFour)\n\n\n//<a href=\"http://192.168.0.7:8000/api/pdftest\" target=\"_blank\">DESCARGAR</a>\n//<button onClick={props.nextStep}>Next</button>\n//<button onClick={props.prevStep}>Prev</button>"]},"metadata":{},"sourceType":"module"}