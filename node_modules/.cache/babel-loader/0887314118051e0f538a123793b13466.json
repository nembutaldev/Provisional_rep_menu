{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menu-editar/forms/delete-section.jsx\";\nimport React from 'react';\nimport Modal from '../../../../components/modales/modal';\nimport { TitleForm } from '../../menus/styles/menu-styles';\nimport { Split } from '../../../../components/containers/containers';\nimport { FieldInput } from '../../../../components/inputs/item-forms';\nimport { ButtonAction } from '../../../../components/buttons/button-action';\nimport { connect } from 'react-redux';\nimport { DeleteMethod } from '../../../../utils/peticiones';\nimport { ErrorAlert, SuccesAlert } from '../../../../utils/alertas';\nimport SpinerForm from '../../../../components/spiners/spiner-form';\n\nconst DeleteSection = props => {\n  //console.log(menu, section)\n  const token = props.sesion.token;\n  const {\n    menu,\n    section\n  } = props.match.params;\n  const [modal, setModal] = React.useState(false);\n  const [load, setLoad] = React.useState(false);\n  React.useEffect(() => {\n    setTimeout(() => {\n      setModal(true);\n    }, 100);\n  }, []);\n\n  const openClose = () => {\n    setModal(!modal);\n    props.history.push(`/dashboard/menu/${menu}`);\n  };\n\n  const closeModal = () => {\n    setModal(false);\n    props.history.push(`/dashboard/menu/${menu}`);\n  };\n\n  const handleDelete = async () => {\n    setLoad(true);\n    const secciones = props.secciones;\n    const mapSections = secciones.map(section => section.id_section);\n    const seccion = parseInt(section);\n    const index = mapSections.indexOf(seccion);\n    const result = await DeleteMethod(`api/users/section/${section}`, {\n      Authorization: 'Bearer ' + token\n    });\n\n    if (result.ok) {\n      secciones.splice(index, 1);\n      props.clearSection();\n      props.refreshSection(secciones);\n      setLoad(false);\n      SuccesAlert('Seccion eliminada');\n      props.history.push(`/dashboard/menu/${menu}`);\n    } else {\n      ErrorAlert('Algo salio mal');\n      setLoad(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    toggle: modal,\n    toggleModal: openClose,\n    cerrarFunction: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(TitleForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"\\xBFDesas borrar esta secci\\xF3n?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Al eliminar esta seccion se eliminar\\xE1n todos los items que contenga.\")), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, load ? /*#__PURE__*/React.createElement(SpinerForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      width: '100%',\n      maxWidth: '220px',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Split, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ButtonAction, {\n    onClick: handleDelete,\n    maxWidth: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, \"Si\"), /*#__PURE__*/React.createElement(ButtonAction, {\n    onClick: closeModal,\n    maxWidth: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, \"Cancelar\"))))));\n}; //FUNCIONES DE REDUX\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    sesion: state.login,\n    secciones: state.menuSection\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshSection: data => {\n      dispatch({\n        type: 'EDITAR_SECTION',\n        data: data\n      });\n    },\n    clearSection: () => {\n      dispatch({\n        type: 'CLEAN_SECTIONS'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteSection);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menu-editar/forms/delete-section.jsx"],"names":["React","Modal","TitleForm","Split","FieldInput","ButtonAction","connect","DeleteMethod","ErrorAlert","SuccesAlert","SpinerForm","DeleteSection","props","token","sesion","menu","section","match","params","modal","setModal","useState","load","setLoad","useEffect","setTimeout","openClose","history","push","closeModal","handleDelete","secciones","mapSections","map","id_section","seccion","parseInt","index","indexOf","result","Authorization","ok","splice","clearSection","refreshSection","width","maxWidth","margin","mapStateToProps","state","ownProps","login","menuSection","mapDispatchToProps","dispatch","data","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from '../../../../components/modales/modal';\nimport { TitleForm } from '../../menus/styles/menu-styles';\nimport { Split } from '../../../../components/containers/containers';\nimport { FieldInput } from '../../../../components/inputs/item-forms';\nimport { ButtonAction } from '../../../../components/buttons/button-action';\nimport {connect} from 'react-redux'\nimport { DeleteMethod } from '../../../../utils/peticiones';\nimport { ErrorAlert, SuccesAlert } from '../../../../utils/alertas';\nimport SpinerForm from '../../../../components/spiners/spiner-form';\n\n\n\nconst DeleteSection = (props) => {\n\n    //console.log(menu, section)\n    const token = props.sesion.token\n    const {menu, section} = props.match.params\n    const [modal, setModal] = React.useState(false)\n    const [load, setLoad] = React.useState(false)\n\n    React.useEffect(()=>{\n        setTimeout(()=>{ setModal(true)},100)\n    },[])\n\n    const openClose = () =>{\n        setModal(!modal)\n        props.history.push(`/dashboard/menu/${menu}`)\n    }\n    const closeModal = () =>{\n        setModal(false)\n        props.history.push(`/dashboard/menu/${menu}`)\n    }\n\n    const handleDelete = async  () =>{\n        setLoad(true)\n        const secciones = props.secciones\n        const mapSections = secciones.map((section) => section.id_section)\n        const seccion = parseInt(section)\n        const index = mapSections.indexOf(seccion)\n\n        \n        const result = await DeleteMethod(`api/users/section/${section}`, {Authorization:'Bearer ' + token})\n        if(result.ok){\n            secciones.splice(index, 1)\n            props.clearSection()\n            props.refreshSection(secciones)\n            setLoad(false)\n            SuccesAlert('Seccion eliminada')\n            props.history.push(`/dashboard/menu/${menu}`)\n        }else{\n            ErrorAlert('Algo salio mal')\n            setLoad(false)\n        }\n        \n    }\n\n    return (\n        <>\n           <Modal toggle={modal} toggleModal={openClose} cerrarFunction={closeModal}>\n\n                <TitleForm>\n                    <h1>¿Desas borrar esta sección?</h1>\n                    <p>Al eliminar esta seccion se eliminarán todos los items que contenga.</p>\n                </TitleForm>\n                  \n                <FieldInput>\n                    {load ?\n                        <SpinerForm/>\n                        :\n                        <section style={{width:'100%', maxWidth:'220px', margin:'auto'}}>\n                            <Split>\n                                \n                                <ButtonAction   onClick={handleDelete}\n                                                maxWidth=\"100px\">Si\n                                </ButtonAction>\n                                <ButtonAction   onClick={closeModal}\n                                                maxWidth=\"100px\">Cancelar\n                                </ButtonAction>\n\n                            </Split>\n                        </section>\n                    }\n                        \n                </FieldInput>\n\n\n\n           </Modal>\n        </>\n    );\n};\n\n//FUNCIONES DE REDUX\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        sesion: state.login,\n        secciones: state.menuSection\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        refreshSection: (data) => {\n            dispatch({type:'EDITAR_SECTION', data:data})\n        },\n        clearSection: () =>{\n            dispatch({type:'CLEAN_SECTIONS'})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteSection)\n"]},"metadata":{},"sourceType":"module"}