{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/views/new_restaurant/new_restaurant.jsx\";\nimport React from 'react';\nimport FirstBranchoffice from '../auth/multiform/first-branchoffice';\nimport { GetMethod } from '../../utils/peticiones';\nimport { connect } from 'react-redux';\nimport SpinerCharge from '../../components/spiners/spiner-charge';\nimport { Redirect } from 'react-router-dom';\n\nconst NewRestaurant = props => {\n  const idUser = props.sesion.user.id_user;\n  const token = props.sesion.token;\n  const [list, setList] = React.useState([]);\n  const [load, setLoad] = React.useState(true);\n  const [flag, setFlag] = React.useState(false);\n  React.useEffect(() => {\n    const getRestorants = async () => {\n      const result = await GetMethod(`api/users/restaurants/${idUser}`, {\n        Authorization: 'Bearer ' + token\n      }); //console.log(result.ok)\n      //console.log(result.response.data.data.restaurants);\n\n      if (result.ok) {\n        setList(result.response.data.data.restaurants);\n        setLoad(false);\n\n        if (result.response.data.data.restaurants.length !== 0) {\n          setFlag(true);\n        }\n      } else {\n        setLoad(false);\n      }\n    };\n\n    getRestorants();\n  }, [idUser, token]);\n\n  if (load) {\n    return /*#__PURE__*/React.createElement(SpinerCharge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    });\n  } else {\n    if (list.length === 0) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/dashboard/first\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FirstBranchoffice, Object.assign({}, props, {\n      flag: flag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    })));\n  }\n}; //----------> REDUX\n\n\nconst mapStateToProps = state => {\n  return {\n    sesion: state.login\n  };\n};\n\nexport default connect(mapStateToProps)(NewRestaurant);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/views/new_restaurant/new_restaurant.jsx"],"names":["React","FirstBranchoffice","GetMethod","connect","SpinerCharge","Redirect","NewRestaurant","props","idUser","sesion","user","id_user","token","list","setList","useState","load","setLoad","flag","setFlag","useEffect","getRestorants","result","Authorization","ok","response","data","restaurants","length","mapStateToProps","state","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE7B,QAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAjC;AACA,QAAMC,KAAK,GAAGL,KAAK,CAACE,MAAN,CAAaG,KAA3B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACe,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACe,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACe,QAAN,CAAe,KAAf,CAAxB;AAEAf,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAK;AAChB,UAAMC,aAAa,GAAG,YAAW;AAC7B,YAAMC,MAAM,GAAG,MAAMpB,SAAS,CAAE,yBAAwBM,MAAO,EAAjC,EAAoC;AAACe,QAAAA,aAAa,EAAC,YAAYX;AAA3B,OAApC,CAA9B,CAD6B,CAE7B;AACA;;AACA,UAAGU,MAAM,CAACE,EAAV,EAAa;AACTV,QAAAA,OAAO,CAACQ,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBA,IAArB,CAA0BC,WAA3B,CAAP;AACAV,QAAAA,OAAO,CAAC,KAAD,CAAP;;AACA,YAAGK,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBA,IAArB,CAA0BC,WAA1B,CAAsCC,MAAtC,KAAiD,CAApD,EAAsD;AAClDT,UAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,OAND,MAMK;AACDF,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,KAbD;;AAcAI,IAAAA,aAAa;AAEjB,GAjBD,EAiBE,CAACb,MAAD,EAASI,KAAT,CAjBF;;AAoBA,MAAGI,IAAH,EAAQ;AAEJ,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH,GAJD,MAIK;AAED,QAAGH,IAAI,CAACe,MAAL,KAAgB,CAAnB,EAAqB;AACjB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,wBACI,uDACI,oBAAC,iBAAD,oBAAuBrB,KAAvB;AAA8B,MAAA,IAAI,EAAEW,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAKH;AACJ,CA5CD,C,CAgDA;;;AAEA,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHrB,IAAAA,MAAM,EAAEqB,KAAK,CAACC;AADX,GAAP;AAGH,CAJD;;AAQA,eAAe5B,OAAO,CAAC0B,eAAD,CAAP,CAAyBvB,aAAzB,CAAf","sourcesContent":["import React from 'react';\nimport FirstBranchoffice from '../auth/multiform/first-branchoffice';\nimport { GetMethod } from '../../utils/peticiones';\nimport {connect} from 'react-redux';\nimport SpinerCharge from '../../components/spiners/spiner-charge';\nimport {Redirect} from 'react-router-dom'\n\nconst NewRestaurant = (props) => {\n\n    const idUser = props.sesion.user.id_user\n    const token = props.sesion.token\n    const [list, setList] = React.useState([]);\n    const [load, setLoad] = React.useState(true);\n    const [flag, setFlag] = React.useState(false);\n    \n    React.useEffect(() =>{\n         const getRestorants = async () =>{\n             const result = await GetMethod(`api/users/restaurants/${idUser}`, {Authorization:'Bearer ' + token});\n             //console.log(result.ok)\n             //console.log(result.response.data.data.restaurants);\n             if(result.ok){\n                 setList(result.response.data.data.restaurants)\n                 setLoad(false)\n                 if(result.response.data.data.restaurants.length !== 0){\n                     setFlag(true)\n                 }\n             }else{\n                 setLoad(false)\n             }\n         }\n         getRestorants();\n\n    },[idUser, token])\n\n\n    if(load){\n\n        return <SpinerCharge/>\n\n    }else{\n\n        if(list.length === 0){\n            return <Redirect to=\"/dashboard/first\"/>\n        }\n\n        return (\n            <>\n                <FirstBranchoffice {...props} flag={flag}/>\n            </>\n        );\n    }\n};\n\n\n\n//----------> REDUX\n\nconst mapStateToProps = (state) => {\n    return {\n        sesion: state.login\n    }\n}\n\n\n\nexport default connect(mapStateToProps)(NewRestaurant)\n\n"]},"metadata":{},"sourceType":"module"}