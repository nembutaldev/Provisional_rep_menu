{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/views/login/login-form.jsx\";\nimport React from 'react';\nimport { Form, FieldInput, Label } from '../../components/inputs/item-forms';\nimport { Input } from '../../components/inputs/inputs';\nimport { ButtonSubmit } from '../../components/buttons/button-submit';\nimport InputPass from '../../components/inputs/input_pass/input_pass';\nimport { mailValidate } from '../../utils/validation';\nimport { InfoAlert, ErrorAlert, SuccesAlert } from '../../utils/alertas';\nimport { PostMethod } from '../../utils/peticiones';\nimport SpinerForm from '../../components/spiners/spiner-form';\nimport { connect } from 'react-redux';\n\nconst LoginForm = props => {\n  //console.log(props)\n  const [error, setError] = React.useState({\n    e_email: false\n  });\n  const [load, setLoad] = React.useState(false);\n  const [login, setLogin] = React.useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = e;\n    setLogin({ ...login,\n      [name]: value\n    });\n  };\n\n  const validation = e => {\n    if (e.target.name === 'email') {\n      setError({ ...error,\n        e_email: mailValidate(e.target)\n      });\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoad(true);\n\n    if (error.e_email === false || login.email === '' || login.password === '') {\n      InfoAlert('Asegurate de llenar correctamente todos los campos');\n      setLoad(false);\n      return;\n    } //Aqui va la peticion\n\n\n    const result = await PostMethod(login, 'api/login'); //console.log('%c->LOGIN', 'color:sienna', result);\n\n    if (result.ok) {\n      console.log(result.response.data);\n      SuccesAlert('Sesion iniciada');\n      setLoad(false);\n      props.iniciarSesion(result.response.data);\n      localStorage.setItem('user', JSON.stringify(result.response.data));\n      props.history.push('/dashboard');\n    } else {\n      ErrorAlert(result.response.data.message);\n      setLoad(false);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Usuario\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"ejemplo@algo.com\",\n    onChange: validation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Contrase\\xF1a\"), /*#__PURE__*/React.createElement(InputPass, {\n    name: \"password\",\n    onChange: validation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), load ? /*#__PURE__*/React.createElement(SpinerForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(ButtonSubmit, {\n    margin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Continuar\"));\n}; //----------------------> REDUX\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    prop: state.prop\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    iniciarSesion: data => {\n      dispatch({\n        type: 'LOGIN',\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/views/login/login-form.jsx"],"names":["React","Form","FieldInput","Label","Input","ButtonSubmit","InputPass","mailValidate","InfoAlert","ErrorAlert","SuccesAlert","PostMethod","SpinerForm","connect","LoginForm","props","error","setError","useState","e_email","load","setLoad","login","setLogin","email","password","handleChange","e","target","name","value","validation","handleSubmit","preventDefault","result","ok","console","log","response","data","iniciarSesion","localStorage","setItem","JSON","stringify","history","push","message","mapStateToProps","state","ownProps","prop","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FieldInput, Label } from '../../components/inputs/item-forms';\nimport { Input } from '../../components/inputs/inputs';\nimport { ButtonSubmit } from '../../components/buttons/button-submit';\nimport InputPass from '../../components/inputs/input_pass/input_pass';\nimport { mailValidate } from '../../utils/validation';\nimport { InfoAlert, ErrorAlert, SuccesAlert } from '../../utils/alertas';\nimport { PostMethod } from '../../utils/peticiones';\nimport SpinerForm from '../../components/spiners/spiner-form';\nimport {connect} from 'react-redux'\n\n\nconst LoginForm = (props) => {\n    //console.log(props)\n    const [error, setError] = React.useState({e_email:false})\n    const [load, setLoad] = React.useState(false)\n    const [login, setLogin] = React.useState({ email:'', password:''})\n\n\n    const handleChange = (e) =>{\n        const {target:{name, value}} = e\n        setLogin({ ...login, [name]:value })\n    }\n    const validation = (e) =>{\n        if(e.target.name === 'email'){\n            setError({...error, e_email: mailValidate(e.target)})\n        }\n    }\n\n    const handleSubmit = async e =>{\n        e.preventDefault();\n        setLoad(true)\n        if(error.e_email === false || login.email === '' || login.password === ''){\n            InfoAlert('Asegurate de llenar correctamente todos los campos');\n            setLoad(false)\n            return;\n        }\n\n        //Aqui va la peticion\n        const result = await PostMethod(login, 'api/login');\n        //console.log('%c->LOGIN', 'color:sienna', result);\n        if(result.ok){\n            console.log(result.response.data)\n            SuccesAlert('Sesion iniciada');\n            setLoad(false);\n            props.iniciarSesion(result.response.data);\n            localStorage.setItem('user', JSON.stringify(result.response.data))\n            props.history.push('/dashboard');\n        }else{\n            ErrorAlert(result.response.data.message);\n            setLoad(false);\n        };\n    }\n\n    return (\n        <Form onChange={handleChange} onSubmit={handleSubmit}>\n\n            <FieldInput>\n                <Label>Usuario</Label>\n                <Input  type=\"email\"\n                        name=\"email\"\n                        placeholder=\"ejemplo@algo.com\"\n                        onChange={validation}\n                        />\n            </FieldInput>\n\n\n            <FieldInput>\n                <Label>Contraseña</Label>\n                <InputPass  name=\"password\"\n                            onChange={validation}/>\n\n            </FieldInput>\n\n            \n            {\n                    load\n                ?\n                    <SpinerForm/>\n                :\n                    <ButtonSubmit margin>Continuar</ButtonSubmit>\n            }\n\n        </Form>\n    );\n};\n\n\n\n//----------------------> REDUX\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        prop: state.prop\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        iniciarSesion: (data) => {\n            dispatch({type:'LOGIN', data:data})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n"]},"metadata":{},"sourceType":"module"}