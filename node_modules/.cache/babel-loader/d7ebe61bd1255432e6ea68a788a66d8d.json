{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/branchoffice/list_branchoffice.jsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { GetMethod } from '../../../utils/peticiones';\nimport { connect } from 'react-redux';\nimport SpinerCharge from '../../../components/spiners/spiner-charge';\nimport CardSucursal from './items/card-sucursal';\nimport { CenterTop, WidthCaja } from '../../../components/containers/containers';\nimport BartopList from '../../../components/bartop/bartop-list';\nimport CabeceraSucursalesList from './items/cabecera-sucursales-list';\n\nconst ListBranchOffice = props => {\n  //console.log('LISTA', props)\n  const idUser = props.sesion.user.id_user;\n  const token = props.sesion.token;\n  const [list, setList] = React.useState([]);\n  const [load, setLoad] = React.useState(true);\n  React.useEffect(() => {\n    const getRestorants = async () => {\n      const result = await GetMethod(`api/users/restaurants/${idUser}`, {\n        Authorization: 'Bearer ' + token\n      }); //console.log('RESP',result)\n      //console.log('RESP',result.response.data.data.restaurants);\n\n      if (result.ok) {\n        setList(result.response.data.data.restaurants.reverse()); //props.getRestaurants(result.response.data.data.restaurants)\n\n        setLoad(false); //console.log(list)\n      } else {\n        setLoad(false);\n      }\n    };\n\n    getRestorants();\n  }, [idUser, token]);\n\n  if (load) {\n    return /*#__PURE__*/React.createElement(SpinerCharge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    });\n  } else {\n    if (list.length === 0) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/dashboard/first\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(CenterTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WidthCaja, {\n      maxWidth: \"400px\",\n      flow: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CabeceraSucursalesList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BartopList, {\n      icon: \"fas fa-store\",\n      title: \"Mis restaurantes\",\n      ruta: \"/dashboard/nuevasucursal\",\n      btntxt: \"crear\",\n      btnicon: \"fas fa-plus-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), list.map((item, i) => {\n      return /*#__PURE__*/React.createElement(CardSucursal, {\n        key: i,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 32\n        }\n      });\n    })));\n  }\n}; //REDUX---------------->\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    sesion: state.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getRestaurants: data => {\n      dispatch({\n        type: 'GET_RESTAURANTS',\n        data: data\n      });\n    },\n    cleanRestaurantes: () => {\n      dispatch({\n        type: 'CLEAN_RESTAURANTS'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListBranchOffice);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/branchoffice/list_branchoffice.jsx"],"names":["React","Redirect","GetMethod","connect","SpinerCharge","CardSucursal","CenterTop","WidthCaja","BartopList","CabeceraSucursalesList","ListBranchOffice","props","idUser","sesion","user","id_user","token","list","setList","useState","load","setLoad","useEffect","getRestorants","result","Authorization","ok","response","data","restaurants","reverse","length","map","item","i","mapStateToProps","state","ownProps","login","mapDispatchToProps","dispatch","getRestaurants","type","cleanRestaurantes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { GetMethod } from '../../../utils/peticiones';\nimport { connect } from 'react-redux';\nimport SpinerCharge from '../../../components/spiners/spiner-charge';\nimport CardSucursal from './items/card-sucursal';\nimport { CenterTop, WidthCaja } from '../../../components/containers/containers';\nimport BartopList from '../../../components/bartop/bartop-list';\nimport CabeceraSucursalesList from './items/cabecera-sucursales-list';\n\n\n\nconst ListBranchOffice = (props) => {\n    //console.log('LISTA', props)\n    const idUser = props.sesion.user.id_user\n    const token = props.sesion.token\n    const [list, setList] = React.useState([])\n    const [load, setLoad] = React.useState(true)\n    React.useEffect(() =>{\n         const getRestorants = async () =>{\n             const result = await GetMethod(`api/users/restaurants/${idUser}`, {Authorization:'Bearer ' + token});\n             //console.log('RESP',result)\n             //console.log('RESP',result.response.data.data.restaurants);\n             if(result.ok){\n                 setList(result.response.data.data.restaurants.reverse())\n                 //props.getRestaurants(result.response.data.data.restaurants)\n                 setLoad(false)\n                 //console.log(list)\n             }else{\n                 setLoad(false)\n             }\n         }\n         getRestorants();\n         \n\n    },[idUser, token])\n\n\n    if(load){\n\n        return <SpinerCharge/>\n\n    }else{\n\n        if(list.length === 0){\n\n            return <Redirect to=\"/dashboard/first\"/>\n\n        }\n\n        return (\n            \n        <CenterTop>\n        <WidthCaja maxWidth=\"400px\" flow=\"column\">\n\n                <CabeceraSucursalesList/>\n        \n                <BartopList icon=\"fas fa-store\"\n                            title=\"Mis restaurantes\"\n                            ruta=\"/dashboard/nuevasucursal\"\n                            btntxt=\"crear\"\n                            btnicon=\"fas fa-plus-circle\"\n                            />\n\n                {\n                    list.map((item, i) =>{\n                        return <CardSucursal    key={i}\n                                                item={item}\n                                                />\n                    })\n                }\n        </WidthCaja>\n        </CenterTop>\n        \n        );\n\n\n    }\n};\n\n\n\n\n\n//REDUX---------------->\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        sesion: state.login\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getRestaurants: (data) => {\n            dispatch({type:'GET_RESTAURANTS', data: data})\n        },\n        cleanRestaurantes:() =>{\n            dispatch({type:'CLEAN_RESTAURANTS'})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListBranchOffice)\n"]},"metadata":{},"sourceType":"module"}