{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/pages/auth/perfil/perfil.jsx\";\nimport React from 'react';\nimport PerfilData from '../../../views/auth/perfil/prefil-data';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { GetMethod } from '../../../utils/peticiones';\nimport SpinerCharge from '../../../components/spiners/spiner-charge';\n\nconst Perfil = props => {\n  //console.log('SUBRUTAS', props.subroutes.map(sub => sub.path))\n  //console.log('PERFILKKKKKKKK', props)\n  const token = props.sesion.token;\n  const {\n    id_user\n  } = props.sesion.user;\n  const [load, setLoad] = React.useState(true);\n  const {\n    getProfile\n  } = props;\n  React.useEffect(() => {\n    const getUser = async () => {\n      const result = await GetMethod(`api/users/profile/${id_user}`, {\n        Authorization: 'Bearer ' + token\n      }); //console.log(result)\n\n      if (result.ok) {\n        const user = result.response.data.data;\n        getProfile(user);\n        setLoad(false);\n      } else {\n        alert('algo salio mal');\n      }\n    };\n\n    getUser();\n  }, [id_user, token, getProfile]);\n\n  if (load) {\n    return /*#__PURE__*/React.createElement(SpinerCharge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PerfilData, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, props.subroutes.map((sub, i) => {\n      return /*#__PURE__*/React.createElement(Route, {\n        key: i,\n        path: sub.path,\n        exact: sub.exact,\n        render: props => /*#__PURE__*/React.createElement(sub.component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 60\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }\n      });\n    })));\n  }\n}; // ----------------------> REDUX\n\n\nconst mapStateToProps = state => {\n  return {\n    sesion: state.login,\n    perfil: state.profile\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProfile: data => {\n      dispatch({\n        type: 'GET_PROFILE',\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Perfil);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/pages/auth/perfil/perfil.jsx"],"names":["React","PerfilData","connect","Switch","Route","GetMethod","SpinerCharge","Perfil","props","token","sesion","id_user","user","load","setLoad","useState","getProfile","useEffect","getUser","result","Authorization","ok","response","data","alert","subroutes","map","sub","i","path","exact","mapStateToProps","state","login","perfil","profile","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAKA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEvB;AACC;AAEA,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,QAAM;AAACE,IAAAA;AAAD,MAAYH,KAAK,CAACE,MAAN,CAAaE,IAA/B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACe,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAeR,KAArB;AAEAR,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAK;AACjB,UAAMC,OAAO,GAAG,YAAW;AACvB,YAAMC,MAAM,GAAG,MAAMd,SAAS,CAAE,qBAAoBM,OAAQ,EAA9B,EAAiC;AAACS,QAAAA,aAAa,EAAC,YAAYX;AAA3B,OAAjC,CAA9B,CADuB,CAEvB;;AACA,UAAGU,MAAM,CAACE,EAAV,EAAa;AACT,cAAMT,IAAI,GAAGO,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBA,IAAlC;AACAP,QAAAA,UAAU,CAACJ,IAAD,CAAV;AACAE,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH,OAJD,MAIK;AACDU,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;AACJ,KAVD;;AAWAN,IAAAA,OAAO;AACV,GAbD,EAaE,CAACP,OAAD,EAAUF,KAAV,EAAgBO,UAAhB,CAbF;;AAmBA,MAAGH,IAAH,EAAQ;AACJ,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEK;AAIL,wBACI,uDACI,oBAAC,UAAD,oBAAgBL,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,eAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQA,KAAK,CAACiB,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,GAAD,EAAMC,CAAN,KAAW;AAC3B,0BAAO,oBAAC,KAAD;AAAS,QAAA,GAAG,EAAEA,CAAd;AACS,QAAA,IAAI,EAAED,GAAG,CAACE,IADnB;AAES,QAAA,KAAK,EAAEF,GAAG,CAACG,KAFpB;AAGS,QAAA,MAAM,EAAGtB,KAAD,iBAAW,oBAAC,GAAD,CAAK,SAAL,oBAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH,KAND,CAFR,CAHJ,CADJ;AAuBC;AACJ,CA3DD,C,CAgEA;;;AAEA,MAAMuB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHtB,IAAAA,MAAM,EAAEsB,KAAK,CAACC,KADX;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACG;AAFX,GAAP;AAIH,CALD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHrB,IAAAA,UAAU,EAAGO,IAAD,IAAU;AAClBc,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAC,aAAN;AAAqBf,QAAAA,IAAI,EAACA;AAA1B,OAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAerB,OAAO,CAAC6B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6C7B,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PerfilData from '../../../views/auth/perfil/prefil-data';\nimport {connect} from 'react-redux'\nimport {Switch, Route} from 'react-router-dom'\nimport { GetMethod} from '../../../utils/peticiones';\nimport SpinerCharge from '../../../components/spiners/spiner-charge';\n\n\n\n\nconst Perfil = (props) => {\n\n   //console.log('SUBRUTAS', props.subroutes.map(sub => sub.path))\n    //console.log('PERFILKKKKKKKK', props)\n\n    const token = props.sesion.token\n    const {id_user} = props.sesion.user\n    const [load, setLoad] = React.useState(true)\n    const {getProfile} = props\n\n    React.useEffect(() =>{\n        const getUser = async () =>{\n            const result = await GetMethod(`api/users/profile/${id_user}`, {Authorization:'Bearer ' + token})\n            //console.log(result)\n            if(result.ok){\n                const user = result.response.data.data\n                getProfile(user)\n                setLoad(false)            \n            }else{\n                alert('algo salio mal')\n            }\n        }\n        getUser()\n    },[id_user, token,getProfile])\n\n\n    \n\n\n    if(load){\n        return <SpinerCharge/>\n    }else{\n\n    \n\n    return (\n        <>\n            <PerfilData {...props}/>\n            \n            <Switch>\n                {\n                    props.subroutes.map((sub, i) =>{\n                        return <Route   key={i}\n                                        path={sub.path}\n                                        exact={sub.exact}\n                                        render={(props) => <sub.component {...props} />}\n                                        />\n                    })\n                }\n            </Switch>\n\n\n            \n\n        </>\n    );\n\n\n    }\n};\n\n\n\n\n// ----------------------> REDUX\n\nconst mapStateToProps = (state) => {\n    return {\n        sesion: state.login,\n        perfil: state.profile\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getProfile: (data) => {\n            dispatch({type:'GET_PROFILE', data:data})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Perfil)\n"]},"metadata":{},"sourceType":"module"}