{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/pages/auth/dashboard.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport BarTop from '../../components/bartop/bartop';\nimport { Switch, Route } from 'react-router-dom';\nimport { GetMethod } from '../../utils/peticiones';\nimport CargandoTxt from '../../components/spiners/cargando-txt';\nimport { ErrorAlert } from '../../utils/alertas';\n\nconst Dashboard = props => {\n  //console.log('DESLOGUEAR', props)\n  const {\n    subroutes\n  } = props;\n  const [load, setLoad] = React.useState(true);\n  React.useEffect(() => {\n    if (props.sesion !== null) {\n      const idUser = props.sesion.user.id_user;\n      const token = props.sesion.token;\n\n      const getRestaurants = async () => {\n        //console.log('HUEVOS----->')\n        const result = await GetMethod(`api/users/restaurants/${idUser}`, {\n          Authorization: 'Bearer ' + token\n        });\n\n        if (result.ok) {\n          //console.log(result.response.data.data.restaurants)\n          props.getRestaurants(result.response.data.data.restaurants);\n          setLoad(!result.ok);\n        } else {\n          console.log('Desloguear aqui', result.response);\n\n          if (result.response.status === 401) {\n            ErrorAlert('Tu sesi贸n ha caducado, vuelve a iniciar sesi贸n');\n            props.logout();\n          }\n\n          setLoad(false);\n        }\n      };\n\n      getRestaurants();\n    } else {\n      setLoad(false);\n    } //return () =>{props.cleanRestaurantes()}\n\n  }, [props]);\n\n  if (load) {\n    // if(props.sesion === null){\n    //     return <Redirect to=\"/login\"/>\n    // }\n    return /*#__PURE__*/React.createElement(CargandoTxt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    });\n  } else {\n    if (props.sesion === null) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BarTop, Object.assign({\n      user: props.sesion\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, subroutes.map((subroute, i) => {\n      return /*#__PURE__*/React.createElement(Route, {\n        key: i,\n        path: subroute.path,\n        exact: subroute.exact,\n        render: props => /*#__PURE__*/React.createElement(subroute.component, Object.assign({}, props, {\n          subroutes: subroute.subroutes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 60\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 32\n        }\n      });\n    })));\n  }\n}; //REDUX--------->\n\n\nconst mapStateToProps = state => {\n  return {\n    sesion: state.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getRestaurants: data => {\n      dispatch({\n        type: 'GET_RESTAURANTS',\n        data: data\n      });\n    },\n    cleanRestaurantes: () => {\n      dispatch({\n        type: 'CLEAN_RESTAURANTS'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/pages/auth/dashboard.jsx"],"names":["React","connect","Redirect","BarTop","Switch","Route","GetMethod","CargandoTxt","ErrorAlert","Dashboard","props","subroutes","load","setLoad","useState","useEffect","sesion","idUser","user","id_user","token","getRestaurants","result","Authorization","ok","response","data","restaurants","console","log","status","logout","map","subroute","i","path","exact","mapStateToProps","state","login","mapDispatchToProps","dispatch","type","cleanRestaurantes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport BarTop from '../../components/bartop/bartop';\nimport { Switch, Route } from 'react-router-dom'\nimport { GetMethod } from '../../utils/peticiones';\nimport CargandoTxt from '../../components/spiners/cargando-txt';\nimport { ErrorAlert } from '../../utils/alertas';\n\n\nconst Dashboard = (props) => {\n    \n    //console.log('DESLOGUEAR', props)\n    const {subroutes} = props\n    const [load, setLoad] = React.useState(true);\n\n    React.useEffect(() =>{\n        if(props.sesion !== null){\n\n        const idUser = props.sesion.user.id_user\n        const token = props.sesion.token\n        \n          const getRestaurants = async () =>{\n              //console.log('HUEVOS----->')\n              const result = await GetMethod(`api/users/restaurants/${idUser}`,{Authorization:'Bearer ' + token} );\n              if(result.ok){\n                  //console.log(result.response.data.data.restaurants)\n                  props.getRestaurants(result.response.data.data.restaurants)\n                  setLoad(!result.ok)\n              }else{\n                  console.log('Desloguear aqui',result.response)\n                  if(result.response.status === 401){\n                      ErrorAlert('Tu sesi贸n ha caducado, vuelve a iniciar sesi贸n')\n                      props.logout();\n                  }\n                  setLoad(false)\n              }\n          }\n          getRestaurants();\n            \n           \n        }else{\n            setLoad(false)\n        }\n        //return () =>{props.cleanRestaurantes()}\n    },[props])\n\n    if(load){\n        // if(props.sesion === null){\n        //     return <Redirect to=\"/login\"/>\n        // }\n        return <CargandoTxt/>\n\n    }else{\n\n    \n\n    if(props.sesion === null){ \n        return <Redirect to=\"/login\"/>\n    }\n       \n\n    return (\n        <>  \n            \n            <BarTop user={props.sesion} {...props}/>\n            <Switch>\n                {\n                    subroutes.map((subroute, i) =>{\n                        \n                        return <Route   key={i}\n                                        path={subroute.path}\n                                        exact={subroute.exact}\n                                        \n                                        render={(props) => <subroute.component {...props} subroutes={subroute.subroutes}/>}\n                                        />\n                    })\n                }\n            </Switch>\n        </>\n    );\n}\n};\n\n\n\n\n\n//REDUX--------->\n\nconst mapStateToProps = (state) => {\n    return {\n        sesion: state.login\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getRestaurants: (data) => {\n            dispatch({type:'GET_RESTAURANTS', data: data})\n        },\n        cleanRestaurantes:() =>{\n            dispatch({type:'CLEAN_RESTAURANTS'})\n        }\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}