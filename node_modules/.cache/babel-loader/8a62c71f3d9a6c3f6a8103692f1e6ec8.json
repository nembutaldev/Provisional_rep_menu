{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menus/items/forms/form-item.jsx\";\nimport React from 'react';\nimport { Form, FieldInput, Label } from '../../../../../components/inputs/item-forms';\nimport { Input, TextArea } from '../../../../../components/inputs/inputs';\nimport { ButtonAction } from '../../../../../components/buttons/button-action';\nimport { connect } from 'react-redux';\nimport InputFile from '../../../../../components/inputs/input_file/input_file';\nimport uuid from 'react-uuid';\nimport SpinerForm from '../../../../../components/spiners/spiner-form';\n\nconst FormItem = props => {\n  //console.log('LAFIONA', props)\n  const {\n    name,\n    price,\n    description\n  } = props.item;\n  const {\n    setItem\n  } = props;\n  const {\n    item\n  } = props;\n  const {\n    addItem\n  } = props;\n  const {\n    image,\n    imageUrl\n  } = props.image; //console.log('CAMP', image, imageUrl)\n\n  const onDrop = e => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    console.log(file);\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      props.setImage({ ...image,\n        imageUrl: reader.result,\n        image: file\n      });\n    };\n  };\n\n  const onDragOver = e => e.preventDefault();\n\n  const handleFile = e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0]; //console.log(file)\n\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        props.setImage({ ...image,\n          imageUrl: reader.result,\n          image: file\n        });\n      };\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: 'var(--colordos)',\n      fontSize: '1.5rem',\n      fontFamily: 'Bold',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Crear producto\")), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"Nombre del producto:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    placeholder: \"Asigna un nombre\",\n    onChange: e => setItem({ ...item,\n      [e.target.name]: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Precio:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"price\",\n    value: price,\n    placeholder: \"Asigna un precio\",\n    onChange: e => setItem({ ...item,\n      [e.target.name]: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Descripci\\xF3n\"), /*#__PURE__*/React.createElement(TextArea, {\n    name: \"description\",\n    value: description,\n    placeholder: \"Descripcion\",\n    onChange: e => setItem({ ...item,\n      [e.target.name]: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Sube o arrastra una imagen\"), /*#__PURE__*/React.createElement(InputFile, {\n    ide: `p-image${uuid()}`,\n    onDrop: onDrop,\n    onDragOver: onDragOver,\n    imgPrevio: imageUrl,\n    onChange: handleFile,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, props.send ? /*#__PURE__*/React.createElement(SpinerForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(ButtonAction, {\n    onClick: e => {\n      e.preventDefault();\n      addItem();\n    },\n    maxWidth: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, \" Agregar item\")));\n}; //REDUX-------------------->\n\n\nconst mapStateToProps = state => {\n  return {\n    objects: state.menuObject\n  };\n};\n\nexport default connect(mapStateToProps)(FormItem);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menus/items/forms/form-item.jsx"],"names":["React","Form","FieldInput","Label","Input","TextArea","ButtonAction","connect","InputFile","uuid","SpinerForm","FormItem","props","name","price","description","item","setItem","addItem","image","imageUrl","onDrop","e","preventDefault","file","dataTransfer","files","console","log","reader","FileReader","readAsDataURL","onload","setImage","result","onDragOver","handleFile","target","color","fontSize","fontFamily","textAlign","value","send","mapStateToProps","state","objects","menuObject"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FieldInput, Label } from '../../../../../components/inputs/item-forms';\nimport { Input, TextArea } from '../../../../../components/inputs/inputs';\nimport { ButtonAction } from '../../../../../components/buttons/button-action';\nimport { connect } from 'react-redux'\nimport InputFile from '../../../../../components/inputs/input_file/input_file';\nimport uuid from 'react-uuid'\nimport SpinerForm from '../../../../../components/spiners/spiner-form';\n\n\nconst FormItem = (props) => {\n    //console.log('LAFIONA', props)\n    const {name, price, description} = props.item\n    const {setItem} = props\n    const {item} = props\n    const {addItem} = props\n    const {image, imageUrl} = props.image\n    \n    \n    //console.log('CAMP', image, imageUrl)\n    const onDrop = (e) =>{\n        e.preventDefault();\n        const file = e.dataTransfer.files[0]\n\n        console.log(file)\n        let reader = new FileReader();\n        reader.readAsDataURL(file)\n        reader.onload = function(){\n            props.setImage({...image, imageUrl:reader.result, image:file})\n        }\n\n    }\n\n    const onDragOver = (e) => e.preventDefault();\n\n    const handleFile = (e) =>{\n        if(e.target.files && e.target.files[0]){\n            const file = e.target.files[0]\n            //console.log(file)\n\n            let reader = new FileReader();\n            reader.readAsDataURL(file)\n            reader.onload = function(){\n                props.setImage({...image, imageUrl:reader.result, image:file})\n            }\n\n        }\n    }\n\n\n\n    return (\n    \n        <Form>\n            <FieldInput>\n                \n                    <h1 style={{    color:'var(--colordos)',\n                                    fontSize:'1.5rem',\n                                    fontFamily:'Bold',\n                                    textAlign:'center'\n                                    }}>Crear producto</h1>\n              \n            </FieldInput>\n            <FieldInput>\n                        <Label>Nombre del producto:</Label>\n                        <Input  type=\"text\"\n                                name=\"name\"\n                                value={name}\n                                placeholder=\"Asigna un nombre\"\n                                onChange={(e) => setItem({...item, [e.target.name]: e.target.value})}/>\n                    </FieldInput>\n                    <FieldInput>\n                        <Label>Precio:</Label>\n                        <Input  type=\"text\"\n                                name=\"price\"\n                                value={price}\n                                placeholder=\"Asigna un precio\"\n                                onChange={(e) => setItem({...item, [e.target.name]: e.target.value})}/>\n                    </FieldInput>\n                    <FieldInput>\n                        <Label>Descripción</Label>\n                        <TextArea\n                            name=\"description\"\n                            value={description}\n                            placeholder=\"Descripcion\"\n                            onChange={(e) => setItem({...item, [e.target.name]: e.target.value})}\n                        ></TextArea>\n                    </FieldInput>\n\n\n                    <FieldInput>\n                        <Label>Sube o arrastra una imagen</Label>\n                        \n                       \n                        <InputFile  ide={`p-image${uuid()}`}\n                                    onDrop={onDrop}\n                                    onDragOver={onDragOver}\n                                    imgPrevio={imageUrl}\n                                    onChange={handleFile}\n                                    width=\"100%\"\n                                    />\n                      \n                        \n\n                    </FieldInput>\n\n\n\n\n                    <FieldInput>\n                        {props.send ? \n                            <SpinerForm/>\n                            :\n                            <ButtonAction onClick={(e) =>{\n                                e.preventDefault();\n                                addItem();\n                            }} maxWidth=\"100%\"> Agregar item</ButtonAction>\n                        }\n                    </FieldInput>\n                    \n\n        </Form>\n            \n    \n    );\n};\n\n\n\n\n\n//REDUX-------------------->\n\nconst mapStateToProps = (state) => {\n    return {\n        objects: state.menuObject\n    }\n}\nexport default connect(mapStateToProps)(FormItem)\n"]},"metadata":{},"sourceType":"module"}