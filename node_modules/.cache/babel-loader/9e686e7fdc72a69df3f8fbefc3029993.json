{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menus/create-menu.jsx\";\nimport React from 'react';\nimport SubtitleMenu from './items/subtitle-menu'; //import uuid from 'react-uuid'\n\nimport { ButtonAction } from '../../../components/buttons/button-action';\nimport { ContainerMenu } from './styles/menu-styles';\nimport Modal from '../../../components/modales/modal';\nimport Section from './items/section'; //import VacioItem from '../../../components/titles/vacio-item';\n//import { InfoAlert } from '../../../utils/alertas';\n\nimport FormSection from './items/forms/form-section';\nimport { PostMethod } from '../../../utils/peticiones';\nimport { connect } from 'react-redux';\nimport { SuccesAlert, ErrorAlert, InfoAlert } from '../../../utils/alertas';\nconst initialState = {\n  name: '',\n  rows: {},\n  items: {},\n  rowsOrder: [],\n  nameSection: '',\n  sections: [],\n  products: []\n};\n\nconst CreateMenu = props => {\n  //console.log('CREAR MENU',props)\n  //console.log(props.section)\n  const token = props.sesion.token;\n  const [data, setData] = React.useState(initialState);\n  const [togglemodal, setTogglemodal] = React.useState(false); //const [togglemodalitem, setTogglemodalitem] = React.useState(false)\n\n  const showModal = () => setTogglemodal(!togglemodal);\n\n  const sectionChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSave = () => {};\n\n  const {\n    cleanMenu,\n    cleanProducts,\n    cleanSections\n  } = props;\n  React.useEffect(() => {\n    return () => {\n      cleanMenu();\n      cleanSections();\n      cleanProducts();\n    };\n  }, [cleanMenu, cleanProducts, cleanSections]); // FUNCION DE AGREGAR SECCION\n\n  const addSection = async () => {\n    const nameSection = data.nameSection; //const nameSectionId = data.nameSection + uuid();\n\n    if (nameSection === '') {\n      InfoAlert('LLena los campos');\n      return;\n    }\n\n    const stateSections = data.sections;\n    stateSections.push(nameSection);\n    const index = stateSections.indexOf(nameSection);\n    const ideMenu = props.menu.id_menu;\n    const newSection = {\n      name: nameSection,\n      index: index,\n      id_menu: ideMenu\n    };\n    const newRow = { ...data.rows,\n      [nameSection]: { ...data.rows[nameSection],\n        items: []\n      }\n    };\n    const result = await PostMethod(newSection, 'api/users/section', {\n      Authorization: 'Bearer ' + token\n    });\n\n    if (result.ok) {\n      //console.log('VICENTE FOX',result.response.data)\n      props.addSection(result.response.data);\n      showModal();\n      setData({ ...data,\n        nameSection: '',\n        rows: newRow\n      });\n      SuccesAlert('Seccion creada');\n    } else {\n      ErrorAlert('Algo salio mal');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    toggle: togglemodal,\n    toggleModal: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSection, {\n    nameSection: data.nameSection,\n    onChange: sectionChange,\n    addSection: addSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SubtitleMenu, Object.assign({\n    data: data,\n    setData: setData,\n    handleSave: handleSave\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ContainerMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, props.section.map((sect, i) => {\n    return /*#__PURE__*/React.createElement(Section, {\n      key: i,\n      sect: sect,\n      data: data,\n      setData: setData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 24\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"bottom-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonAction, {\n    icon: true,\n    maxWidth: \"250px\",\n    onClick: showModal,\n    disabled: data.name ? false : true,\n    style: {\n      background: data.name ? 'var(--base)' : '#ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Crear nueva secci\\xF3n\", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  })))));\n}; //REDUX ------------------>\n\n\nconst mapStateToProps = state => {\n  return {\n    sesion: state.login,\n    menu: state.menu,\n    section: state.menuSection\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    cleanMenu: () => {\n      dispatch({\n        type: 'REMOVE_MENU'\n      });\n    },\n    addSection: data => {\n      dispatch({\n        type: 'ADD_SECTION',\n        data: data\n      });\n    },\n    cleanSections: () => {\n      dispatch({\n        type: 'CLEAN_SECTIONS'\n      });\n    },\n    cleanProducts: () => {\n      dispatch({\n        type: 'CLEAN_OBJECT'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateMenu);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menus/create-menu.jsx"],"names":["React","SubtitleMenu","ButtonAction","ContainerMenu","Modal","Section","FormSection","PostMethod","connect","SuccesAlert","ErrorAlert","InfoAlert","initialState","name","rows","items","rowsOrder","nameSection","sections","products","CreateMenu","props","token","sesion","data","setData","useState","togglemodal","setTogglemodal","showModal","sectionChange","e","target","value","handleSave","cleanMenu","cleanProducts","cleanSections","useEffect","addSection","stateSections","push","index","indexOf","ideMenu","menu","id_menu","newSection","newRow","result","Authorization","ok","response","section","map","sect","i","background","mapStateToProps","state","login","menuSection","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SubtitleMenu from './items/subtitle-menu';\n//import uuid from 'react-uuid'\nimport { ButtonAction } from '../../../components/buttons/button-action';\nimport { ContainerMenu } from './styles/menu-styles';\nimport Modal from '../../../components/modales/modal';\nimport Section from './items/section';\n//import VacioItem from '../../../components/titles/vacio-item';\n//import { InfoAlert } from '../../../utils/alertas';\nimport FormSection from './items/forms/form-section';\nimport { PostMethod } from '../../../utils/peticiones';\nimport { connect } from 'react-redux'\nimport { SuccesAlert, ErrorAlert, InfoAlert } from '../../../utils/alertas';\n\n\nconst initialState = {\n    name:'',\n    rows:{},\n    items:{},\n    rowsOrder:[],\n    nameSection:'',\n    sections:[], \n    products:[],\n}\n\n\nconst CreateMenu = (props) => {\n    //console.log('CREAR MENU',props)\n    \n    //console.log(props.section)\n    \n    const token = props.sesion.token\n    \n    const [data, setData] = React.useState(initialState)\n    const [togglemodal, setTogglemodal] = React.useState(false)\n    //const [togglemodalitem, setTogglemodalitem] = React.useState(false)\n\n    \n\n    const showModal = () => setTogglemodal(!togglemodal)\n\n    const sectionChange = (e) =>{\n        setData({\n            ...data,\n            [e.target.name]:e.target.value\n        })\n    }\n    \n    \n\n    const handleSave = () =>{}\n    const {cleanMenu, cleanProducts, cleanSections} = props\n    React.useEffect(() =>{ return () =>{\n                                            cleanMenu()\n                                            cleanSections()\n                                            cleanProducts()\n                                        } },[cleanMenu, cleanProducts, cleanSections])\n\n\n\n\n\n    // FUNCION DE AGREGAR SECCION\n    const addSection = async () =>{\n\n        const nameSection = data.nameSection\n        //const nameSectionId = data.nameSection + uuid();\n        if(nameSection === ''){\n            InfoAlert('LLena los campos')\n            return;\n        }\n        const stateSections = data.sections\n        stateSections.push(nameSection)\n        const index = stateSections.indexOf(nameSection)\n        const ideMenu = props.menu.id_menu\n        const newSection={\n            name:nameSection,\n            index:index,\n            id_menu:ideMenu\n        }\n        const newRow = {\n            ...data.rows,\n            [nameSection]:{\n                ...data.rows[nameSection],\n                items:[]\n            }\n        }\n        \n        \n        const result = await PostMethod(newSection, 'api/users/section', {Authorization:'Bearer ' + token})\n        if(result.ok){\n            //console.log('VICENTE FOX',result.response.data)\n            props.addSection(result.response.data)\n            showModal()\n            setData({\n                ...data,\n                nameSection:'',\n                rows:newRow\n            })\n            SuccesAlert('Seccion creada')\n        }else{\n            ErrorAlert('Algo salio mal')\n        }\n       \n    }\n    \n    return (\n        <>\n            {/* MODAL DE AGREGAR SECCION */}\n            <Modal toggle={togglemodal} toggleModal={showModal}>\n                <FormSection    nameSection={data.nameSection}\n                                onChange={sectionChange}\n                                addSection={addSection}\n                                />\n            </Modal>\n            {/* MODAL DE AGREGAR SECCION */}\n\n\n            {/* CAMBIAR EL NOMBRE DEL MENU */}\n\n                <SubtitleMenu data={data} setData={setData} handleSave={handleSave} {...props}/>\n\n            {/* CAMBIAR EL NOMBRE DEL MENU */}\n\n                <ContainerMenu>\n            {/* ESTE ES EL CONTENEDOR DEL TABLERO DE MENU */}\n            {/* AQUI SE RENDERIZAN LAS SECCIONES */}\n\n\n\n\n\n            {props.section.map((sect, i) =>{\n                return <Section key={i} sect={sect} data={data} setData={setData}/>\n            })}\n            \n\n\n\n\n            {/* AQUI SE RENDERIZAN LAS SECCIONES */}\n            {/* ESTE ES EL CONTENEDOR DEL TABLERO DE MENU */}\n                \n                <section  className=\"bottom-button\">\n                <ButtonAction   icon\n                                maxWidth=\"250px\"\n                                onClick={showModal}\n                                disabled={data.name ? false : true}\n                                style={{\n                                    background: data.name  ? 'var(--base)' : '#ccc'\n                                }}\n                                >\n                    Crear nueva sección\n                    <i className=\"fas fa-plus-circle\"></i>\n                </ButtonAction>\n                </section>\n            {/* ESTE ES EL CONTENEDOR DEL TABLERO DE MENU */}\n            </ContainerMenu>\n          \n            \n        </>\n    );\n};\n\n\n\n\n\n//REDUX ------------------>\n\n\nconst mapStateToProps = (state) => {\n    return {\n        sesion: state.login,\n        menu: state.menu,\n        section: state.menuSection\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        cleanMenu: () => {\n            dispatch({ type:'REMOVE_MENU' })\n        },\n        addSection: (data) =>{\n            dispatch({type:'ADD_SECTION', data:data})\n        },\n        cleanSections:() =>{\n            dispatch({type:'CLEAN_SECTIONS'})\n        },\n        cleanProducts:() =>{\n            dispatch({type:'CLEAN_OBJECT'})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateMenu)\n"]},"metadata":{},"sourceType":"module"}