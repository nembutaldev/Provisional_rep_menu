{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menus/items/card-menu.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CardContainer } from '../../../../components/containers/containers';\nimport { DeleteMethod } from '../../../../utils/peticiones';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nconst CardMenu = props => {\n  //console.log('CARDMENU', props.menus)\n  const token = props.sesion.token;\n  const {\n    name,\n    id_menu\n  } = props.menu; //  const deleteMenu =  async () =>{\n  //      const listaMenus = props.menus\n  //      const mapear = listaMenus.map((menu) =>{\n  //          return menu.id_menu\n  //      })\n  //      const index = mapear.indexOf(id_menu)\n  //      //console.log('SPLICE', listaMenus)\n  //      //console.log('RESULTADO DELETE', mapear, id_menu, index)\n  //      const result = await DeleteMethod(`api/users/menu/${id_menu}`, {Authorization:'Bearer ' + token})\n  //      if(result.ok){\n  //          listaMenus.splice(index, 1)\n  //          props.cleanMenus();\n  //          props.listaMenus(listaMenus)\n  //      }\n  //      //console.log('RESULTADO DE BORRAR',result);\n  //  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: `/dashboard/menu/${id_menu}`,\n    style: {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContainer, {\n    \"data-tip\": true,\n    \"data-for\": `menuName_${id_menu}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-utensils\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(ReactTooltip, {\n    id: `menuName_${id_menu}`,\n    type: \"info\",\n    backgroundColor: \"var(--base)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"published\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"publicado\")))));\n}; //REDUX---------->\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    sesion: state.login,\n    menus: state.menuLista\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    listaMenus: data => {\n      dispatch({\n        type: 'GET_MENUS',\n        data: data\n      });\n    },\n    cleanMenus: () => {\n      dispatch({\n        type: 'CLEAN_MENUS'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu); //export default CardMenu;","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menus/items/card-menu.jsx"],"names":["React","Link","CardContainer","DeleteMethod","connect","ReactTooltip","CardMenu","props","token","sesion","name","id_menu","menu","textDecoration","mapStateToProps","state","ownProps","login","menus","menuLista","mapDispatchToProps","dispatch","listaMenus","data","type","cleanMenus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,aAAT,QAA8B,8CAA9B;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAKA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,QAAM;AAACE,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBJ,KAAK,CAACK,IAA9B,CAJwB,CAMxB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACI,uDACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,mBAAkBD,OAAQ,EAArC;AAAwC,IAAA,KAAK,EAAE;AAACE,MAAAA,cAAc,EAAC;AAAhB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AAAe,oBAAf;AAAwB,gBAAW,YAAWF,OAAQ,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,eAKA;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,IAAN,CADJ,eAEI,oBAAC,YAAD;AAAgB,IAAA,EAAE,EAAG,YAAWC,OAAQ,EAAxC;AACgB,IAAA,IAAI,EAAC,MADrB;AAEgB,IAAA,eAAe,EAAC,aAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAE+CD,IAF/C,CAFJ,CALA,eAaA;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CAbA,CADA,CADA,CADJ;AA8BH,CAzDD,C,CA8DA;;;AACA,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHP,IAAAA,MAAM,EAAEM,KAAK,CAACE,KADX;AAEHC,IAAAA,KAAK,EAACH,KAAK,CAACI;AAFT,GAAP;AAIH,CALD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,UAAU,EAAGC,IAAD,IAAU;AAClBF,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAC,WADA;AACaD,QAAAA,IAAI,EAACA;AADlB,OAAD,CAAR;AAGH,KALE;AAMHE,IAAAA,UAAU,EAAC,MAAI;AACXJ,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAR;AACH;AARE,GAAP;AAUH,CAXD;;AAaA,eAAepB,OAAO,CAACU,eAAD,EAAkBM,kBAAlB,CAAP,CAA6Cd,QAA7C,CAAf,C,CACA","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\nimport { CardContainer } from '../../../../components/containers/containers';\nimport { DeleteMethod } from '../../../../utils/peticiones';\nimport {connect} from 'react-redux'\nimport ReactTooltip from 'react-tooltip'\n\n\n\n\nconst CardMenu = (props) => {\n\n    //console.log('CARDMENU', props.menus)\n    const token = props.sesion.token\n    const {name, id_menu} = props.menu\n\n    //  const deleteMenu =  async () =>{\n    //      const listaMenus = props.menus\n    //      const mapear = listaMenus.map((menu) =>{\n    //          return menu.id_menu\n    //      })\n    //      const index = mapear.indexOf(id_menu)\n        \n    //      //console.log('SPLICE', listaMenus)\n    //      //console.log('RESULTADO DELETE', mapear, id_menu, index)\n\n\n    //      const result = await DeleteMethod(`api/users/menu/${id_menu}`, {Authorization:'Bearer ' + token})\n    //      if(result.ok){\n    //          listaMenus.splice(index, 1)\n    //          props.cleanMenus();\n    //          props.listaMenus(listaMenus)\n\n    //      }\n    //      //console.log('RESULTADO DE BORRAR',result);\n    //  }\n\n    return (\n        <>\n        <Link to={`/dashboard/menu/${id_menu}`} style={{textDecoration:'none'}}>\n        <CardContainer data-tip data-for={`menuName_${id_menu}`}>\n        <div className=\"icon\">\n            <i className=\"fas fa-utensils\"></i>\n        </div>\n\n        <section className=\"info\">\n            <h1 >{name}</h1>\n            <ReactTooltip   id={`menuName_${id_menu}`}\n                            type=\"info\"\n                            backgroundColor=\"var(--base)\">{name}</ReactTooltip>\n\n        </section>\n\n        <section className=\"published\">\n            <div>\n            </div>\n            <p>\n            publicado\n            </p>\n        </section>\n        </CardContainer>\n        </Link>\n        {/* <button onClick={() =>{\n            deleteMenu();\n        }}>Eliminar</button>  */}\n        </>\n    );\n};\n\n\n\n\n//REDUX---------->\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        sesion: state.login,\n        menus:state.menuLista\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        listaMenus: (data) => {\n            dispatch({\n                type:'GET_MENUS', data:data\n            })\n        },\n        cleanMenus:()=>{\n            dispatch({type:'CLEAN_MENUS'})\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardMenu)\n//export default CardMenu;"]},"metadata":{},"sourceType":"module"}