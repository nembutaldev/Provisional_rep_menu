{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/views/signup/signup-form.jsx\";\nimport React from 'react';\nimport Recaptcha from 'react-recaptcha';\nimport { Form, FieldInput, Label } from '../../components/inputs/item-forms';\nimport { Input } from '../../components/inputs/inputs';\nimport { ButtonSubmit } from '../../components/buttons/button-submit';\nimport { Split } from '../../components/containers/containers';\nimport { minLength, mailValidate, numberPhone } from '../../utils/validation';\nimport { InfoAlert, SuccesAlert, ErrorAlert } from '../../utils/alertas';\nimport { PostMethod } from '../../utils/peticiones';\nimport SpinerForm from '../../components/spiners/spiner-form';\nimport { parsePhoneNumber, isValidPhoneNumber } from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport { connect } from 'react-redux';\nimport InputPhone from '../../components/inputs/input_phone/input-phone';\n\nconst SignUpForm = props => {\n  //console.log('%c->PROPS DE SIGNUP', 'color:fuchsia', props)\n  const [verified, setVerified] = React.useState(false);\n  const [load, setLoad] = React.useState(false);\n  const [error, setError] = React.useState({\n    e_name: false,\n    e_email: false,\n    e_telephone: false,\n    e_password: false\n  });\n  const [register, setRegister] = React.useState({\n    name: '',\n    email: '',\n    telephone: '',\n    password: '',\n    repeatPassword: '',\n    country: '',\n    phoneValidate: true\n  });\n\n  const handleChange = e => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = e;\n    setRegister({ ...register,\n      [name]: value\n    });\n  }; // ------->  FUNCIONES DEL CAPTCHA\n\n\n  const handleCaptcha = () => {};\n\n  const verifyCallaback = response => {\n    if (response) {\n      setVerified(true);\n    }\n  };\n\n  const expired = () => {\n    setVerified(false);\n  }; // ------->  FUNCIONES DEL CAPTCHA\n\n\n  const validation = e => {\n    if (e.target.name === 'name') {\n      setError({ ...error,\n        e_name: minLength(e.target, 6)\n      });\n    }\n\n    if (e.target.name === 'telephone') {//setError({...error, e_telephone:numberPhone(e.target, 10)})\n    }\n\n    if (e.target.name === 'email') {\n      setError({ ...error,\n        e_email: mailValidate(e.target)\n      });\n    }\n\n    if (e.target.name === 'password' || e.target.name === 'repeatPassword') {\n      setError({ ...error,\n        e_password: minLength(e.target, 6)\n      });\n    }\n  };\n\n  const setPhone = phone => {\n    const valor = phone;\n\n    if (valor) {\n      const numero = parsePhoneNumber(valor);\n\n      if (numero === undefined) {\n        console.log('no hay numero');\n      } else {\n        setRegister({ ...register,\n          telephone: numero.number,\n          country: numero.country,\n          phoneValidate: isValidPhoneNumber(numero.number.toString())\n        });\n        console.log('si hay numero');\n      } //console.log(numero)\n\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoad(true);\n\n    if (!error.e_name || !error.e_email || !error.e_password) {\n      InfoAlert('Asegurate de llenar correctamente todos los campos');\n      setLoad(false);\n      return;\n    }\n\n    if (register.telephone === '') {\n      InfoAlert('Asegurate de incluir tu número de whatsapp');\n      setLoad(false);\n      return;\n    }\n\n    if (register.phoneValidate === false) {\n      InfoAlert('Asegurate de escribir correctamente tu número de whatsapp');\n      setLoad(false);\n      return;\n    }\n\n    if (!verified) {\n      InfoAlert('Comprueba el captcha');\n      setLoad(false);\n      return;\n    }\n\n    if (register.password !== register.repeatPassword) {\n      InfoAlert('Las contraseñas no coinciden');\n      setLoad(false);\n      return;\n    } // AGREGAR EL NUMERO UNO AL NUMERO DE MÉXICO\n\n\n    if (register.country === 'MX') {\n      const number = register.telephone;\n      const arrayNumber = number.split(\"\");\n      arrayNumber.splice(3, 0, '1');\n      const resultNumber = arrayNumber.join('');\n      var newUser = {\n        name: register.name,\n        email: register.email,\n        telephone: resultNumber,\n        password: register.password\n      };\n    } else {\n      var newUser = {\n        name: register.name,\n        email: register.email,\n        telephone: register.telephone,\n        password: register.password\n      };\n    }\n\n    console.log(newUser);\n    const result = await PostMethod(newUser, 'api/signup');\n\n    if (result.ok) {\n      console.log('TOKENSITO', result.response.data);\n      const newUser = {\n        data: result.response.data,\n        pass: register.password\n      };\n      console.log(result.response.data);\n      setLoad(false);\n      props.signUpDispatch(newUser); //localStorage.setItem('user', JSON.stringify(result.response.data));\n\n      props.history.push('/verify');\n    } else {\n      //console.log(result);\n      ErrorAlert(result.response.data.message); //console.log(result.response.data.message)\n\n      setLoad(false);\n    }\n  }; //console.log(verified);\n\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, \"Tu nombre:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Escribe tu nombre\",\n    onChange: validation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"Tu correo:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"ejemplo@algo.com\",\n    onChange: validation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FieldInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, \"Tu whatsapp\"), /*#__PURE__*/React.createElement(InputPhone, {\n    valor: register.telephone,\n    onChange: setPhone,\n    phoneValidate: register.phoneValidate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Split, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FieldInput, {\n    maxWidth: \"45%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Contrase\\xF1a:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"M\\xEDnimo 6 car\\xE1cteres\",\n    onChange: validation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FieldInput, {\n    maxWidth: \"45%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, \"Repetir contrase\\xF1a:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"repeatPassword\",\n    onChange: validation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      padding: '20px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Recaptcha, {\n    sitekey: \"6Lf_q6UZAAAAAGbXQWR4PTinF_PPiPVt-3e8WSVn\",\n    render: \"explicit\",\n    onloadCallback: handleCaptcha,\n    verifyCallback: verifyCallaback,\n    expiredCallback: expired,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  })), load ? /*#__PURE__*/React.createElement(SpinerForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(ButtonSubmit, {\n    disabled: verified ? false : true,\n    style: {\n      background: verified ? null : '#ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, \"Crear cuenta\"));\n}; //------>REDUX\n\n\nconst mapStateToProps = state => {\n  return {\n    registro: state.register,\n    sesion: state.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUpDispatch: data => {\n      dispatch({\n        type: 'REGISTER_USER',\n        data: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/views/signup/signup-form.jsx"],"names":["React","Recaptcha","Form","FieldInput","Label","Input","ButtonSubmit","Split","minLength","mailValidate","numberPhone","InfoAlert","SuccesAlert","ErrorAlert","PostMethod","SpinerForm","parsePhoneNumber","isValidPhoneNumber","connect","InputPhone","SignUpForm","props","verified","setVerified","useState","load","setLoad","error","setError","e_name","e_email","e_telephone","e_password","register","setRegister","name","email","telephone","password","repeatPassword","country","phoneValidate","handleChange","e","target","value","handleCaptcha","verifyCallaback","response","expired","validation","setPhone","phone","valor","numero","undefined","console","log","number","toString","handleSubmit","preventDefault","arrayNumber","split","splice","resultNumber","join","newUser","result","ok","data","pass","signUpDispatch","history","push","message","display","justifyContent","padding","background","mapStateToProps","state","registro","sesion","login","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Recaptcha from 'react-recaptcha';\nimport { Form, FieldInput, Label } from '../../components/inputs/item-forms';\nimport { Input } from '../../components/inputs/inputs';\nimport { ButtonSubmit } from '../../components/buttons/button-submit';\nimport {Split} from '../../components/containers/containers'\nimport { minLength, mailValidate, numberPhone } from '../../utils/validation';\nimport { InfoAlert, SuccesAlert, ErrorAlert } from '../../utils/alertas';\nimport { PostMethod } from '../../utils/peticiones';\nimport SpinerForm from '../../components/spiners/spiner-form';\nimport {parsePhoneNumber, isValidPhoneNumber} from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport { connect } from 'react-redux';\nimport InputPhone from '../../components/inputs/input_phone/input-phone';\n\n\n\n\nconst SignUpForm = (props) => {\n\n    //console.log('%c->PROPS DE SIGNUP', 'color:fuchsia', props)\n\n    const [verified, setVerified] = React.useState(false)\n    const [load, setLoad] = React.useState(false);\n    const [error, setError] = React.useState({\n        e_name:false,\n        e_email:false,\n        e_telephone:false,\n        e_password:false,\n    })\n    const [ register, setRegister] = React.useState({\n        name:'',\n        email:'',\n        telephone:'',\n        password:'',\n        repeatPassword:'',\n        country:'',\n        phoneValidate:true\n    })\n    \n\n    const handleChange = (e) =>{\n        const {target : {name, value}} = e\n        setRegister({...register, [name]: value})\n    }\n\n\n    // ------->  FUNCIONES DEL CAPTCHA\n        const handleCaptcha = () =>{\n        }\n\n        const verifyCallaback = (response) =>{\n            if(response){\n                setVerified(true)\n            }\n        }\n\n        const expired = () =>{\n            setVerified(false)\n        }\n    // ------->  FUNCIONES DEL CAPTCHA\n\n\n    const validation = (e) =>{\n        if(e.target.name === 'name'){\n            setError({...error, e_name:minLength(e.target, 6)})\n            \n        }\n        if(e.target.name === 'telephone'){\n            \n            //setError({...error, e_telephone:numberPhone(e.target, 10)})\n        }\n        if(e.target.name === 'email'){\n            setError({...error, e_email:mailValidate(e.target)})\n        }\n        if(e.target.name === 'password' || e.target.name === 'repeatPassword' ){\n            setError({...error, e_password:minLength(e.target, 6)})\n        }\n    }\n\n    const setPhone = (phone) =>{\n\n        const valor = phone\n\n        if(valor){\n            const numero = parsePhoneNumber(valor)\n            if(numero === undefined){\n                console.log('no hay numero')\n            }else{\n                setRegister({\n                    ...register,\n                    telephone: numero.number,\n                    country: numero.country,\n                    phoneValidate:isValidPhoneNumber(numero.number.toString())\n                })\n                console.log('si hay numero')\n            }\n            //console.log(numero)\n        }\n    }\n\n\n    const handleSubmit = async e =>{\n        e.preventDefault();\n        setLoad(true)\n        if(!error.e_name || !error.e_email ||  !error.e_password ){\n            InfoAlert('Asegurate de llenar correctamente todos los campos');\n            setLoad(false)\n            return;\n        }\n        if(register.telephone === ''){\n            InfoAlert('Asegurate de incluir tu número de whatsapp')\n            setLoad(false)\n            return;\n        }\n        if(register.phoneValidate === false){\n            InfoAlert('Asegurate de escribir correctamente tu número de whatsapp')\n            setLoad(false)\n            return;\n        }\n        if(!verified){\n            InfoAlert('Comprueba el captcha')\n            setLoad(false)\n            return;\n        }\n        if(register.password !== register.repeatPassword){\n            InfoAlert('Las contraseñas no coinciden');\n            setLoad(false)\n            return;\n        }\n        // AGREGAR EL NUMERO UNO AL NUMERO DE MÉXICO\n        if(register.country === 'MX'){\n            const number = register.telephone\n            const arrayNumber = number.split(\"\")\n            arrayNumber.splice(3, 0, '1')\n            const resultNumber = arrayNumber.join('')\n            var newUser={\n                name: register.name,\n                email: register.email,\n                telephone: resultNumber,\n                password:register.password,\n            }\n        }else{\n            var newUser={\n                name: register.name,\n                email: register.email,\n                telephone: register.telephone,\n                password:register.password,\n            }\n        }\n\n\n        console.log(newUser)\n        \n        const result = await PostMethod(newUser, 'api/signup')\n        if(result.ok){\n            console.log('TOKENSITO',result.response.data);\n             const newUser = {\n                 data:result.response.data,\n                 pass:register.password\n             }\n            console.log(result.response.data)\n            setLoad(false);\n            props.signUpDispatch(newUser);\n            //localStorage.setItem('user', JSON.stringify(result.response.data));\n            props.history.push('/verify')\n        }else{\n            //console.log(result);\n            ErrorAlert(result.response.data.message);\n            //console.log(result.response.data.message)\n            setLoad(false);\n        } \n    }\n\n    \n\n    \n    //console.log(verified);\n    \n    \n    return (\n        <Form onChange={handleChange} onSubmit={handleSubmit}>\n\n\n            <FieldInput>\n                <Label>Tu nombre:</Label>\n                <Input  type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Escribe tu nombre\"\n                        onChange={validation}\n                        />\n                        \n            </FieldInput>\n\n            <FieldInput>\n                <Label>Tu correo:</Label>\n                <Input  type=\"email\"\n                        name=\"email\"\n                        placeholder=\"ejemplo@algo.com\"\n                        onChange={validation}\n                        />\n               \n            </FieldInput>\n\n            {/* <FieldInput>\n                <Label>Tu whatsapp:</Label>\n                <Input  type=\"tel\"\n                        name=\"telephone\"\n                        max=\"10\"\n                        placeholder=\"Este campo solo acepta números\"\n                        onChange={validation}\n                        />\n                \n            </FieldInput> */}\n\n\n            {/* WIP:IMPLEMENTAR VERIFICACION DE PAIS EN TELEFONO */}\n\n            <FieldInput>\n                <Label>Tu whatsapp</Label>\n            \n                <InputPhone     valor={register.telephone}\n                                onChange={setPhone}\n                                phoneValidate={register.phoneValidate}\n                                />\n                               \n\n            </FieldInput>\n\n            {/* WIP:IMPLEMENTAR VERIFICACION DE PAIS EN TELEFONO */}\n\n\n\n        <Split>\n            <FieldInput maxWidth=\"45%\">\n                <Label>Contraseña:</Label>\n                <Input  type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Mínimo 6 carácteres\"\n                        onChange={validation}\n                        />\n            </FieldInput>\n\n\n            <FieldInput maxWidth=\"45%\">\n                <Label>Repetir contraseña:</Label>\n                <Input  type=\"password\"\n                        name=\"repeatPassword\"\n                        onChange={validation}\n                        />\n            </FieldInput>\n        </Split>\n\n\n\n\n\n        {/* ESTE ES EL CAPTCHA */}\n\n            <section style={{\n                display:'flex',\n                justifyContent:'center',\n                padding:'20px 0px',\n            }}>\n                <Recaptcha\n                sitekey=\"6Lf_q6UZAAAAAGbXQWR4PTinF_PPiPVt-3e8WSVn\"\n                render=\"explicit\"\n                onloadCallback={handleCaptcha}\n                verifyCallback={verifyCallaback}\n                expiredCallback={expired}\n                />\n            </section>\n\n        {/* ESTE ES EL CAPTCHA */}\n        {load\n            ?\n                <SpinerForm/>\n            :   \n                <ButtonSubmit   disabled={verified ? false : true}\n                                style={{\n                                    background:verified ? null : '#ccc'\n                                }}\n                                >\n                    Crear cuenta\n                </ButtonSubmit>\n        }\n\n        \n        \n        </Form>\n    );\n};\n\n\n\n\n//------>REDUX\n\n\nconst mapStateToProps = (state) => {\n    return {\n        registro: state.register,\n        sesion: state.login\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUpDispatch: (data) => {\n            dispatch({\n                type:'REGISTER_USER', data:data\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm)"]},"metadata":{},"sourceType":"module"}