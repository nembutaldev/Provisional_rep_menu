{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/App.js\";\nimport React, { Suspense } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Routes } from './routes/routes';\nimport Carga from './layout/carga/carga';\nimport { connect } from 'react-redux';\nimport Ruta from './routes/ruta';\nvar user = JSON.parse(localStorage.getItem('user'));\n\nconst App = props => {\n  //console.log('%c->APPRUTAS', 'color:sienna', props)\n  if (user) {\n    props.reanudarSesion(user);\n  }\n\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Carga, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, Routes.map((route, i) => {\n    return /*#__PURE__*/React.createElement(Ruta, Object.assign({\n      key: i\n    }, route, user, {\n      logout: props.cerrarSesion,\n      cleanSucursales: props.cleanSucursales,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 22\n      }\n    }));\n  })));\n}; //---------->REDUX\n\n\nconst mapStateToProps = state => {\n  return {\n    sesion: state.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    reanudarSesion: data => {\n      dispatch({\n        type: 'LOGIN',\n        data: data\n      });\n    },\n    cerrarSesion: () => {\n      user = null;\n      localStorage.removeItem('user');\n      dispatch({\n        type: 'LOGOUT'\n      });\n    },\n    cleanSucursales: () => {\n      dispatch({\n        type: 'CLEAN_RESTAURANTS'\n      });\n    }\n  };\n}; //---------->REDUX\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/App.js"],"names":["React","Suspense","Switch","Routes","Carga","connect","Ruta","user","JSON","parse","localStorage","getItem","App","props","reanudarSesion","map","route","i","cerrarSesion","cleanSucursales","mapStateToProps","state","sesion","login","mapDispatchToProps","dispatch","data","type","removeItem"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAIA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;;AAGA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAErB;AAEG,MAAGN,IAAH,EAAQ;AACNM,IAAAA,KAAK,CAACC,cAAN,CAAqBP,IAArB;AACD;;AAEF,sBAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGMJ,MAAM,CAACY,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KAAY;AACrB,wBAAO,oBAAC,IAAD;AAAO,MAAA,GAAG,EAAEA;AAAZ,OACWD,KADX,EAEWT,IAFX;AAGO,MAAA,MAAM,EAAEM,KAAK,CAACK,YAHrB;AAIO,MAAA,eAAe,EAAEL,KAAK,CAACM,eAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AAMD,GAPD,CAHN,CAFA,CAFF;AAqBH,CA7BD,C,CAmCA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACE;AADT,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLX,IAAAA,cAAc,EAAGY,IAAD,IAAU;AACxBD,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAC,OADE;AACOD,QAAAA,IAAI,EAACA;AADZ,OAAD,CAAR;AAGD,KALI;AAMLR,IAAAA,YAAY,EAAE,MAAK;AACjBX,MAAAA,IAAI,GAAG,IAAP;AACAG,MAAAA,YAAY,CAACkB,UAAb,CAAwB,MAAxB;AACAH,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAR;AACD,KAVI;AAWLR,IAAAA,eAAe,EAAE,MAAK;AACpBM,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAR;AACD;AAbI,GAAP;AAgBD,CAjBD,C,CAmBA;;;AACA,eAAetB,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf","sourcesContent":["import React,{Suspense} from 'react';\nimport { Switch } from 'react-router-dom'\nimport { Routes } from './routes/routes';\nimport Carga from './layout/carga/carga';\nimport { connect } from 'react-redux'\nimport Ruta from './routes/ruta';\n\n\n\nvar user = JSON.parse(localStorage.getItem('user'))\n\n\nconst App = (props) => {\n  \n  //console.log('%c->APPRUTAS', 'color:sienna', props)\n\n     if(user){\n       props.reanudarSesion(user)\n     }\n\n    return (\n\n      <Suspense fallback={<Carga/>}>\n          \n      <Switch>\n                      \n          {\n            Routes.map((route, i)=>{\n              return <Ruta  key={i}\n                            {...route}\n                            {...user}\n                            logout={props.cerrarSesion}\n                            cleanSucursales={props.cleanSucursales}\n                            />\n            })\n          }\n              \n      </Switch> \n      </Suspense>\n    );\n  \n};\n\n\n\n\n\n//---------->REDUX\nconst mapStateToProps = (state) => {\n  return {\n    sesion: state.login\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    reanudarSesion: (data) => {\n      dispatch({\n        type:'LOGIN', data:data\n      })\n    },\n    cerrarSesion: () =>{\n      user = null;\n      localStorage.removeItem('user');\n      dispatch({type:'LOGOUT'});\n    },\n    cleanSucursales: () =>{\n      dispatch({type:'CLEAN_RESTAURANTS'})\n    },\n    \n  }\n}\n\n//---------->REDUX\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}