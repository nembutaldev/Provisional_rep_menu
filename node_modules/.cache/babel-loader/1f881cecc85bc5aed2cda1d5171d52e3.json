{"ast":null,"code":"import axios from 'axios';\nimport { baseUrl } from \"./api\";\nexport const PostMethod = (data, uri, headers) => {\n  const url = `${baseUrl}/${uri}`;\n  const params = {\n    method: 'POST',\n    data: data,\n    headers: headers\n  };\n  return axios(url, params).then(response => {\n    //console.log(response.status)\n    if (response.status !== 200) {\n      return {\n        ok: false,\n        message: 'algo salio mal',\n        response: response\n      };\n    } else {\n      console.log(response);\n      return {\n        ok: true,\n        message: 'succes',\n        response: response.data\n      };\n    }\n  }).catch(error => {\n    console.log(error);\n    return {\n      ok: false,\n      message: 'error',\n      response: error.response\n    };\n  });\n};\nexport const GetMethod = (uri, headers) => {\n  const url = `${baseUrl}/${uri}`;\n  const params = {\n    method: 'GET',\n    headers: headers\n  }; //console.log(params)\n  //console.log('HEADERS', url, params)\n\n  return axios(url, params).then(response => {\n    //console.log('AXIOS',url, params, response)\n    if (response.status !== 200) {\n      return {\n        ok: false,\n        message: 'Algo salio mal'\n      };\n    } else {\n      return {\n        ok: true,\n        message: 'succes',\n        response: response\n      };\n    }\n  }).catch(error => {\n    //console.log('PETICION',error.response)\n    return {\n      ok: false,\n      response: error.response\n    };\n  });\n};\nexport const PutMethod = (data, uri, headers) => {\n  const url = `${baseUrl}/${uri}`;\n  const params = {\n    method: 'PUT',\n    data: data,\n    headers: headers\n  };\n  return axios(url, params).then(response => {\n    return {\n      ok: true,\n      response: response\n    };\n  }).catch(error => {\n    return {\n      ok: false,\n      response: error.response\n    };\n  });\n};\nexport const DeleteMethod = (uri, headers) => {\n  const url = `${baseUrl}/${uri}`;\n  const params = {\n    method: 'DELETE',\n    headers: headers\n  };\n  return axios(url, params).then(response => {\n    return {\n      ok: true,\n      response: response\n    };\n  }).catch(error => {\n    return {\n      ok: false,\n      response: error.response\n    };\n  });\n};","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/copia/Provisional_rep_menu/src/utils/peticiones.jsx"],"names":["axios","baseUrl","PostMethod","data","uri","headers","url","params","method","then","response","status","ok","message","console","log","catch","error","GetMethod","PutMethod","DeleteMethod"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { baseUrl } from \"./api\"\n\n\n\nexport const PostMethod = (data, uri, headers) =>{\n    const url = `${baseUrl}/${uri}`\n    const params = {\n        method:'POST',\n        data:data,\n        headers:headers\n    };\n\n\n    return  axios(url, params)\n            .then((response) =>{\n                //console.log(response.status)\n                if(response.status !== 200){\n                    return{\n                        ok:false,\n                        message:'algo salio mal',\n                        response: response\n                    }\n                }else{\n                    console.log(response)\n                    return{\n                        ok:true,\n                        message:'succes',\n                        response:response.data\n                    }\n                }\n            })\n            .catch((error) =>{\n                console.log(error)\n                return{\n                    ok:false,\n                    message:'error',\n                    response:error.response\n                }\n            })\n            \n}\n\n\n\nexport const GetMethod = ( uri, headers) =>{\n    const url = `${baseUrl}/${uri}`;\n    const params = {\n        method:'GET',\n        headers:headers\n    }\n    //console.log(params)\n    \n    //console.log('HEADERS', url, params)\n    return axios(url, params)\n    .then((response) =>{\n        //console.log('AXIOS',url, params, response)\n        \n        if(response.status !== 200){\n                return{\n                    ok:false,\n                    message:'Algo salio mal'\n                }\n            }else{\n                return{\n                    ok:true,\n                    message:'succes',\n                    response:response\n                }\n            }\n        })\n        .catch((error) =>{\n            //console.log('PETICION',error.response)\n            return{\n                ok:false,\n                response:error.response\n            }\n        })\n        \n}\n\n\nexport const PutMethod = (data, uri, headers) =>{\n    const url = `${baseUrl}/${uri}`\n    const params = {\n        method:'PUT',\n        data:data,\n        headers:headers\n    };\n\n    return axios(url, params)\n    .then(response =>{\n        return{\n            ok:true,\n            response:response\n        }\n    })\n    .catch(error =>{\n        return{\n            ok:false,\n            response:error.response\n        }\n    })\n}\n\n\n\nexport const DeleteMethod = (uri, headers) =>{\n    const url = `${baseUrl}/${uri}`\n    const params = {\n        method:'DELETE',\n        headers:headers\n    }\n\n\n    return axios(url, params)\n    .then((response) =>{\n        return{\n            ok:true,\n            response:response\n        }\n\n    })\n    .catch((error) =>{\n        return{\n            ok:false,\n            response:error.response\n        }\n    })\n\n}\n\n"]},"metadata":{},"sourceType":"module"}