{"ast":null,"code":"var _jsxFileName = \"/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menus/nuevo-menu.jsx\";\nimport React from 'react';\nimport { CenterTop, WidthCaja } from '../../../components/containers/containers';\nimport TitleMenu from './items/title-menu';\nimport CreateMenu from './create-menu';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { GetMethod } from '../../../utils/peticiones';\nimport SpinerCharge from '../../../components/spiners/spiner-charge';\nimport FooterCreateMenu from './items/footer-create-menu';\n\nconst NuevoMenu = props => {\n  //console.log('MENU CREATE', props)\n  const idUser = props.sesion.user.id_user;\n  const token = props.sesion.token;\n  const [load, setLoad] = React.useState(true);\n  const [list, setList] = React.useState([]);\n  React.useEffect(() => {\n    const getRestorants = async () => {\n      const result = await GetMethod(`api/users/restaurants/${idUser}`, {\n        Authorization: 'Bearer ' + token\n      });\n\n      if (result.ok) {\n        setList(result.response.data.data.restaurants);\n        setLoad(false); //console.log(result)\n      } else {\n        setLoad(false);\n      }\n    };\n\n    getRestorants();\n  }, [token, idUser]); //console.log('LOAD',load)\n  //console.log('LISTA',list)\n\n  if (load) {\n    return /*#__PURE__*/React.createElement(SpinerCharge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }\n    });\n  } else {\n    if (list.length === 0) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(CenterTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WidthCaja, {\n      maxWidth: \"700px\",\n      flow: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TitleMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CreateMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FooterCreateMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    })));\n  }\n}; //REDUX-------------------->\n\n\nconst mapStateToProps = state => {\n  return {\n    sesion: state.login\n  };\n};\n\nexport default connect(mapStateToProps)(NuevoMenu); //export default NuevoMenu;","map":{"version":3,"sources":["/Users/Buffalo/Desktop/menu/popdavise-v2/src/pages/auth/menus/nuevo-menu.jsx"],"names":["React","CenterTop","WidthCaja","TitleMenu","CreateMenu","connect","Redirect","GetMethod","SpinerCharge","FooterCreateMenu","NuevoMenu","props","idUser","sesion","user","id_user","token","load","setLoad","useState","list","setList","useEffect","getRestorants","result","Authorization","ok","response","data","restaurants","length","mapStateToProps","state","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,2CAArC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB;AACA,QAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAjC;AACA,QAAMC,KAAK,GAAGL,KAAK,CAACE,MAAN,CAAaG,KAA3B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACmB,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAAxB;AAGDnB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAK;AACpB,UAAMC,aAAa,GAAG,YAAW;AAC7B,YAAMC,MAAM,GAAG,MAAMjB,SAAS,CAAE,yBAAwBK,MAAO,EAAjC,EAAoC;AAACa,QAAAA,aAAa,EAAC,YAAYT;AAA3B,OAApC,CAA9B;;AACA,UAAGQ,MAAM,CAACE,EAAV,EAAa;AACTL,QAAAA,OAAO,CAACG,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBA,IAArB,CAA0BC,WAA3B,CAAP;AACAX,QAAAA,OAAO,CAAC,KAAD,CAAP,CAFS,CAGT;AACH,OAJD,MAIK;AACDA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,KATD;;AAUAK,IAAAA,aAAa;AACb,GAZD,EAYE,CAACP,KAAD,EAAQJ,MAAR,CAZF,EAT0B,CAuBzB;AACA;;AACA,MAAGK,IAAH,EAAQ;AAEJ,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH,GAJD,MAIK;AAED,QAAGG,IAAI,CAACU,MAAL,KAAgB,CAAnB,EAAqB;AACjB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,OAApB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAeI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,eAoBI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CAFA,CADJ;AA6BH;AAIJ,CApED,C,CA4EA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHnB,IAAAA,MAAM,EAAEmB,KAAK,CAACC;AADX,GAAP;AAGH,CAJD;;AAMA,eAAe5B,OAAO,CAAC0B,eAAD,CAAP,CAAyBrB,SAAzB,CAAf,C,CACA","sourcesContent":["import React from 'react';\nimport { CenterTop, WidthCaja } from '../../../components/containers/containers';\nimport TitleMenu from './items/title-menu';\nimport CreateMenu from './create-menu';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { GetMethod } from '../../../utils/peticiones';\nimport SpinerCharge from '../../../components/spiners/spiner-charge';\nimport FooterCreateMenu from './items/footer-create-menu';\n\n\nconst NuevoMenu = (props) => {\n\n    //console.log('MENU CREATE', props)\n    const idUser = props.sesion.user.id_user\n    const token = props.sesion.token\n    const [load, setLoad] = React.useState(true)\n    const [list, setList] = React.useState([])\n\n    \n   React.useEffect(() =>{\n    const getRestorants = async () =>{\n        const result = await GetMethod(`api/users/restaurants/${idUser}`, {Authorization:'Bearer ' + token});\n        if(result.ok){\n            setList(result.response.data.data.restaurants)\n            setLoad(false)\n            //console.log(result)\n        }else{\n            setLoad(false)\n        }\n    }\n    getRestorants();\n   },[token, idUser])\n\n    //console.log('LOAD',load)\n    //console.log('LISTA',list)\n    if(load){\n\n        return <SpinerCharge/>\n\n    }else{\n\n        if(list.length === 0){\n            return <Redirect to=\"/dashboard\"/>\n        }\n\n        return (\n            <CenterTop>\n               \n            <WidthCaja maxWidth=\"700px\" flow=\"column\">\n            \n                \n                {/* TITULO DEL NUEVO MENU /INSTRUCCIONES */}\n    \n                <TitleMenu/>\n    \n                {/* TITULO DEL NUEVO MENU /INSTRUCCIONES */}\n    \n    \n                {/* -------------------------------------------------------------------> */}\n    \n    \n                {/* AQUI SE RENDERIZA EL COMPONENTE PARA CREAR EL MENU-------> */}\n    \n                <CreateMenu/>\n    \n                {/* AQUI SE RENDERIZA EL COMPONENTE PARA CREAR EL MENU-------> */}\n    \n    \n                <FooterCreateMenu/>\n    \n            </WidthCaja>\n            </CenterTop>\n        );\n\n    }\n    \n    \n    \n};\n\n\n\n\n\n\n\n//REDUX-------------------->\nconst mapStateToProps = (state) => {\n    return {\n        sesion: state.login\n    }\n}\n\nexport default connect(mapStateToProps)(NuevoMenu)\n//export default NuevoMenu;"]},"metadata":{},"sourceType":"module"}